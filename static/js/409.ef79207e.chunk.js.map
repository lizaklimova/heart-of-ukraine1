{"version":3,"file":"static/js/409.ef79207e.chunk.js","mappings":"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","sources":["components/Tasks/CreateTask/CreateTaskForm/CreateTaskForm.styled.jsx","components/Tasks/FiltersForm/FiltersForm.styled.jsx","assets/icons/ListArrow.jsx","components/Tasks/SearchFiltersList/SearchFiltersList.jsx"],"sourcesContent":["import styled, { keyframes, css } from \"styled-components\";\nimport { accentBtn } from \"../../FiltersForm/FiltersForm.styled\";\n\nconst commonWrapperStyles = css`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n\n  @media screen and (min-width: 1440px) {\n    gap: 60px;\n  }\n`;\n\nconst shakeAnimation = keyframes`\n  0% { transform: translateX(0); }\n  20% { transform: translateX(-5px); }\n  40% { transform: translateX(5px); }\n  60% { transform: translateX(-5px); }\n  80% { transform: translateX(5px); }\n  100% { transform: translateX(0); }\n`;\n\nexport const CreateForm = styled.form`\n  ${commonWrapperStyles}\n`;\n\nexport const PositionWrap = styled.div`\n  ${commonWrapperStyles}\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 126px;\n  }\n\n  @media screen and (min-width: 1920px) {\n    padding-bottom: 50px;\n  }\n`;\n\nexport const MobTabPositioningWrap = styled.div`\n  @media screen and (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const TextAreasWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n\n  @media screen and (min-width: 1440px) {\n    gap: 60px;\n    width: 50%;\n  }\n`;\n\nexport const AttachmentBtnWrap = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 64px;\n\n  .upload-error {\n    position: absolute;\n    top: -20px;\n    right: 0;\n    font-family: Nunito;\n    font-size: 12px;\n    color: #fe4747;\n    margin-left: auto;\n  }\n\n  @media screen and (min-width: 1440px) {\n    justify-content: space-between;\n    width: 50%;\n  }\n`;\n\nexport const DeskPositioningWrap = styled.div`\n  display: none;\n\n  @media screen and (min-width: 1440px) {\n    display: block;\n  }\n`;\n\nexport const TextAreaLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-family: Nunito;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.25;\n  color: #0b1c24;\n`;\n\nexport const TextArea = styled.textarea`\n  padding: 12px;\n  border-radius: 8px;\n  border: 1px solid #787d83;\n  background: #fefefe;\n  color: #0b1c24;\n  resize: none;\n  width: 100%;\n  height: 116px;\n\n  &::-webkit-scrollbar-track {\n    border-radius: 10px;\n    margin: 5px 0;\n  }\n\n  &.invalid {\n    border-color: #fe4747;\n  }\n\n  &#name {\n    height: 54px;\n  }\n\n  &::placeholder {\n    font-weight: 400;\n    color: #a0a9b4;\n  }\n`;\n\nexport const RestrictionMsg = styled.p`\n  font-family: Nunito;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: normal;\n  color: #808080;\n\n  &.invalid {\n    color: #fe4747;\n    animation: ${shakeAnimation} 0.5s ease-in-out;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 16px;\n    line-height: 1.25;\n  }\n`;\n\nexport const ErrorMsg = styled.p`\n  font-family: Nunito;\n  font-size: 14px;\n  color: #fe4747;\n\n  &#checkboxes {\n    margin-top: 8px;\n  }\n`;\n\nexport const AttachmentBlock = styled.div`\n  min-height: 224px;\n  border-radius: 8px;\n  border: 3px dashed #c2ced8;\n  padding: 16px 32px;\n\n  &.invalid {\n    border-color: #fe4747;\n  }\n\n  label {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 32px;\n    cursor: pointer;\n\n    &:hover p,\n    &:focus p {\n      background: conic-gradient(\n        from -3deg at 100% -13%,\n        #f67307 0deg,\n        #f67307 360deg\n      );\n      background-clip: text;\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n\n    &:active p {\n      background: conic-gradient(\n        from -3deg at 100% -13%,\n        #b35e0f 0deg,\n        #b35e0f 360deg\n      );\n      background-clip: text;\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n\n    &.disabled {\n      opacity: 0.5;\n      cursor: not-allowed;\n    }\n\n    input {\n      display: none;\n    }\n  }\n\n  p {\n    font-size: 16px;\n    font-weight: 600;\n    line-height: 1.5;\n    background: conic-gradient(\n      from -3deg at 100% -13%,\n      #ffa502 0deg,\n      #c85120 360deg\n    );\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n`;\n\nexport const PostBtn = styled.button`\n  ${accentBtn}\n  width: 100%;\n  max-width: 321px !important;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    width: 343px !important;\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nexport const AttachmentList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    gap: 40px;\n  }\n\n  li {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: calc((100% - 80px) / 2);\n\n    @media screen and (min-width: 450px) {\n      width: calc((100% - 80px) / 4);\n    }\n\n    @media screen and (min-width: 768px) {\n      width: unset;\n    }\n\n    div {\n      position: relative;\n    }\n\n    button {\n      position: absolute;\n      top: -16px;\n      right: -23px;\n      background-color: transparent;\n\n      svg {\n        fill: transparent;\n        stroke: #548ba0;\n      }\n    }\n  }\n\n  img {\n    width: 64px;\n    height: 64px;\n    border-radius: 4px;\n    object-fit: cover;\n  }\n`;\n","import styled, { css } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { gradientTextHover, subtitleStyle } from \"../Tasks.styled\";\n\nexport const accentBtn = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: normal;\n  color: #fff;\n  border-radius: 12px;\n  background: conic-gradient(\n    from -3deg at 100% -13%,\n    #ffa502 0deg,\n    #c85120 360deg\n  );\n  width: 50%;\n  padding: 12px 24px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 173px;\n    height: 48px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 343px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  margin-bottom: 50px;\n  min-height: 300px;\n  ${({ $variant }) => $variant === \"allFilters\" && \"margin-top: 20px;\"}\n\n  @media screen and (min-width: 1440px) {\n    gap: 56px;\n    margin-bottom: 56px;\n  }\n`;\n\nexport const ShowMoreFiltersWrap = styled.div`\n  ${subtitleStyle}\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 32px;\n\n  @media screen and (max-width: 450px) {\n    ${({ $variant }) =>\n      $variant === \"createTask\" &&\n      \"flex-direction: column; align-items: flex-start;\"}\n  }\n\n  a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    pointer-events: all;\n    gap: 6px;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1;\n    background: conic-gradient(\n      from -3deg at 100% -13%,\n      #ffa502 0deg,\n      #c85120 360deg\n    );\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    ${gradientTextHover}\n\n    @media screen and (min-width: 1440px) {\n      display: none;\n    }\n\n    svg {\n      transform: rotate(-90deg);\n    }\n  }\n`;\n\nexport const Label = styled.div`\n  ${subtitleStyle}\n`;\n\nexport const FiltersList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n  min-height: 100px;\n`;\n\nexport const FakeInputBlock = styled.div`\n  position: relative;\n\n  input {\n    position: absolute;\n    z-index: 3;\n    opacity: 0;\n    width: 100%;\n    height: 37px;\n    pointer-events: all;\n    cursor: pointer;\n  }\n\n  input:checked + div {\n    outline: 1px solid #548ba0;\n    background-color: transparent;\n    color: #548ba0;\n    padding-right: 37px;\n  }\n\n  input:checked + div > svg use {\n    stroke: #548ba0;\n    fill: #548ba0;\n  }\n\n  input:not(:checked):hover + div {\n    outline: 2px solid #246e8c;\n    background-color: #548ba0;\n  }\n\n  input:not(:checked):active + div {\n    outline: 2px solid #246e8c;\n    background-color: #529ebd;\n  }\n\n  input:checked + div button {\n    position: absolute;\n    top: 50%;\n    right: 12px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0;\n    transform: translateY(-50%);\n    background-color: transparent;\n  }\n`;\n\nexport const FakeInput = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  font-family: Nunito;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.25;\n  color: #fff;\n  border-radius: 18px;\n  padding: 8px 22px;\n  background: #548ba0;\n  pointer-events: none;\n  cursor: pointer;\n  transition: background-color 350ms ease-in-out, outline 150ms linear;\n\n  button {\n    display: none;\n  }\n\n  p {\n    @media screen and (max-width: 767px) {\n      font-size: 14px;\n    }\n\n    &.region-text {\n      text-transform: capitalize;\n    }\n  }\n\n  svg {\n    pointer-events: all;\n  }\n\n  svg use {\n    stroke: #fff;\n    fill: #fff;\n  }\n`;\n\nexport const ResetSearchBtnWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n\n  &.all-filters {\n    justify-content: center;\n  }\n\n  @media screen and (min-width: 375px) {\n    flex-direction: row;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 24px;\n  }\n`;\n\nexport const FiltersBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  padding: 0;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1;\n  background: conic-gradient(\n    from -3deg at 100% -13%,\n    #ffa502 0deg,\n    #c85120 360deg\n  );\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  ${gradientTextHover}\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  ${accentBtn}\n  width: 70%;\n\n  @media screen and (min-width: 375px) {\n    max-width: 150px;\n  }\n\n  @media screen and (min-width: 393px) {\n    max-width: 170px;\n  }\n\n  @media screen and (min-width: 450px) {\n    max-width: 200px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 173px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 343px;\n  }\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nexport const CreateTaskLink = styled(Link)`\n  ${accentBtn}\n  margin: 0;\n  position: fixed;\n  opacity: 1;\n  z-index: 5;\n  left: 50%;\n  transform: translateX(-50%);\n  bottom: 30px;\n\n  &#mob-link {\n    text-align: center;\n    width: 80%;\n    max-width: 340px;\n    height: 48px;\n  }\n\n  @media screen and (min-width: 767px) {\n    display: none;\n  }\n`;\n","const ListArrow = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"15\"\n      height=\"8\"\n      viewBox=\"0 0 15 8\"\n      fill=\"none\"\n    >\n      <path\n        d=\"M1.5 1L6.645 6.61911C7.11 7.12696 7.875 7.12696 8.34 6.61911L13.5 1\"\n        stroke=\"url(#paint0_angular_2013_2813)\"\n        strokeWidth=\"2\"\n        strokeMiterlimit=\"10\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <defs>\n        <radialGradient\n          id=\"paint0_angular_2013_2813\"\n          cx=\"0\"\n          cy=\"0\"\n          r=\"1\"\n          gradientUnits=\"userSpaceOnUse\"\n          gradientTransform=\"translate(13.5 0.220002) rotate(-96.5542) scale(11.3542 24.2617)\"\n        >\n          <stop stopColor=\"#FFA502\" />\n          <stop offset=\"1\" stopColor=\"#C85120\" />\n        </radialGradient>\n      </defs>\n    </svg>\n  );\n};\n\nexport default ListArrow;\n","import { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { getAllCategories, getAllRegions } from \"api\";\nimport { capitalizeStr } from \"helpers\";\nimport sprite from \"assets/icons/sprite.svg\";\nimport ListArrow from \"assets/icons/ListArrow\";\nimport {\n  FakeInput,\n  FakeInputBlock,\n  FiltersList,\n  Label,\n  ShowMoreFiltersWrap,\n} from \"components/Tasks/FiltersForm/FiltersForm.styled\";\nimport {\n  ErrorMsg,\n  RestrictionMsg,\n} from \"../CreateTask/CreateTaskForm/CreateTaskForm.styled\";\n\nconst SearchFiltersList = ({\n  showMore,\n  variant,\n  setCategoriesFilters,\n  setRegionsFilters,\n  maxFiltersLength = 100,\n  areCategoriesEmpty,\n  isRegionEmpty,\n  setAreCategoriesEmpty,\n  setIsRegionEmpty,\n  defaultCheckedCategories,\n  defaultCheckedRegions,\n  shouldResetElements,\n  isUpdating,\n}) => {\n  const [categories, setCategories] = useState([]);\n  const [regions, setRegions] = useState([]);\n  const [categoriesSelectedCount, setCategoriesSelectedCount] = useState(\n    isUpdating ? defaultCheckedCategories.length : 0\n  );\n  const [regionsSelectedCount, setRegionsSelectedCount] = useState(\n    isUpdating ? defaultCheckedRegions.length : 0\n  );\n  const [restrictedCheckbox, setRestrictedCheckbox] = useState(null);\n\n  const location = useLocation();\n  const { t, i18n } = useTranslation();\n\n  useEffect(() => {\n    if (variant === \"createTask\" && shouldResetElements) {\n      setCategoriesSelectedCount(0);\n      setRegionsSelectedCount(0);\n    }\n  }, [shouldResetElements, variant]);\n\n  useEffect(() => {\n    const fetchFilters = async () => {\n      const categs = await getAllCategories();\n      const regs = await getAllRegions();\n\n      setCategories(categs);\n\n      const ivanoFrankivskIndex = regs?.findIndex(\n        (reg) => reg.regionEn === \"IVANO_FRANKIVSK\"\n      );\n\n      const updatedRegs = [...regs];\n      updatedRegs[ivanoFrankivskIndex] = {\n        regionEn: \"IVANO-FRANKIVSK\",\n        regionUa: \"ІВАНО-ФРАНКІВСЬКА\",\n      };\n\n      setRegions(updatedRegs);\n    };\n\n    fetchFilters();\n  }, []);\n\n  const disallowCheckingFilter = (target, quantity) => {\n    const isChecked = target.checked;\n    const changeFn =\n      target.name === \"category\"\n        ? setCategoriesSelectedCount\n        : setRegionsSelectedCount;\n\n    const selectedCount =\n      target.name === \"category\"\n        ? categoriesSelectedCount\n        : regionsSelectedCount;\n\n    if (isChecked) {\n      if (selectedCount < quantity) {\n        changeFn((prev) => prev + 1);\n\n        setRestrictedCheckbox(null);\n      } else {\n        target.checked = false;\n        setRestrictedCheckbox(target.name);\n      }\n    } else {\n      changeFn(selectedCount - 1);\n      setRestrictedCheckbox(null);\n    }\n  };\n\n  const checkboxProps = (filterType, element) =>\n    defaultCheckedCategories && defaultCheckedRegions\n      ? // eslint-disable-next-line\n        !!filterType.find((el) => el == element)\n      : false;\n\n  return (\n    <>\n      <Label $variant={variant}>\n        <ShowMoreFiltersWrap $variant={variant}>\n          {t(\"tasks.category\")}\n          {variant === \"createTask\" && (\n            <RestrictionMsg\n              className={restrictedCheckbox === \"category\" && \"invalid\"}\n            >\n              {t(\"createTask.categoryRestriction\")}\n            </RestrictionMsg>\n          )}\n          {showMore && variant !== \"allFilters\" && (\n            <Link\n              to={`${location.pathname}/filters`}\n              state={{ from: location }}\n            >\n              {t(\"tasks.more\")}\n              <ListArrow />\n            </Link>\n          )}\n        </ShowMoreFiltersWrap>\n\n        <FiltersList>\n          {categories\n            .slice(0, maxFiltersLength)\n            .map(({ id, iconTag, categoryNameEn, categoryNameUa }) => (\n              <FakeInputBlock key={id}>\n                <input\n                  type=\"checkbox\"\n                  name=\"category\"\n                  value={id}\n                  defaultChecked={checkboxProps(defaultCheckedCategories, id)}\n                  onChange={({ target }) => {\n                    if (variant === \"createTask\") {\n                      setAreCategoriesEmpty(false);\n                      disallowCheckingFilter(target, 5);\n                      if (categoriesSelectedCount > 5 && !target.checked) {\n                        target.disabled = true;\n                      }\n\n                      target.disabled = false;\n                    }\n\n                    setCategoriesFilters((prev) => {\n                      if (!target.checked) {\n                        return [...prev.filter((el) => el !== target.value)];\n                      }\n\n                      return [...prev, target.value];\n                    });\n                  }}\n                />\n                <FakeInput>\n                  {iconTag && (\n                    <svg width={19} height={19}>\n                      <use href={`${sprite}#${iconTag}`}></use>\n                    </svg>\n                  )}\n                  <p>\n                    {i18n.language === \"uk\"\n                      ? capitalizeStr(categoryNameUa)\n                      : capitalizeStr(categoryNameEn)}\n                  </p>\n                  <button type=\"button\" aria-label=\"Delete choice\">\n                    <svg width={13} height={13}>\n                      <use href={`${sprite}#icon-delete`}></use>\n                    </svg>\n                  </button>\n                </FakeInput>\n              </FakeInputBlock>\n            ))}\n        </FiltersList>\n\n        {variant === \"createTask\" && areCategoriesEmpty && (\n          <ErrorMsg id=\"checkboxes\">\n            {t(\"createTask.validation.chooseCategory\")}\n          </ErrorMsg>\n        )}\n      </Label>\n\n      <Label>\n        <ShowMoreFiltersWrap $variant={variant}>\n          {t(\"tasks.region\")}\n          {variant === \"createTask\" && (\n            <RestrictionMsg\n              className={restrictedCheckbox === \"region\" && \"invalid\"}\n            >\n              {t(\"createTask.regionRestriction\")}\n            </RestrictionMsg>\n          )}\n          {showMore && variant !== \"allFilters\" && (\n            <Link\n              to={`${location.pathname}/filters`}\n              state={{ from: location }}\n            >\n              {t(\"tasks.more\")}\n              <ListArrow />\n            </Link>\n          )}\n        </ShowMoreFiltersWrap>\n\n        <FiltersList>\n          {regions\n            .slice(0, maxFiltersLength)\n            .map(({ regionEn, regionUa }, index) => (\n              <FakeInputBlock key={`${index}/${regionEn}`}>\n                <input\n                  id={index === 0 ? \"first\" : \"\"}\n                  type=\"checkbox\"\n                  name=\"region\"\n                  value={regionEn}\n                  defaultChecked={checkboxProps(\n                    defaultCheckedRegions,\n                    regionEn\n                  )}\n                  onChange={({ target }) => {\n                    if (variant === \"createTask\") {\n                      setIsRegionEmpty(false);\n                      disallowCheckingFilter(target, 1);\n                      if (regionsSelectedCount > 1 && !target.checked) {\n                        target.disabled = true;\n                      }\n\n                      target.disabled = false;\n                    }\n\n                    setRegionsFilters((prev) => {\n                      if (!target.checked) {\n                        return [...prev.filter((el) => el !== target.value)];\n                      }\n\n                      return [...prev, target.value];\n                    });\n                  }}\n                />\n                <FakeInput>\n                  <p className=\"region-text\">\n                    {i18n.language === \"uk\"\n                      ? regionUa.toLowerCase()\n                      : regionEn.toLowerCase()}\n                  </p>\n                  <button\n                    id=\"region-reset\"\n                    type=\"button\"\n                    aria-label=\"Delete choice\"\n                  >\n                    <svg width={13} height={13}>\n                      <use href={`${sprite}#icon-delete`}></use>\n                    </svg>\n                  </button>\n                </FakeInput>\n              </FakeInputBlock>\n            ))}\n        </FiltersList>\n\n        {variant === \"createTask\" && isRegionEmpty && (\n          <ErrorMsg id=\"checkboxes\">\n            {t(\"createTask.validation.chooseRegion\")}\n          </ErrorMsg>\n        )}\n      </Label>\n    </>\n  );\n};\n\nexport default SearchFiltersList;\n"],"names":["commonWrapperStyles","css","_templateObject","_taggedTemplateLiteral","shakeAnimation","keyframes","_templateObject2","CreateForm","styled","form","_templateObject3","PositionWrap","div","_templateObject4","MobTabPositioningWrap","_templateObject5","TextAreasWrap","_templateObject6","AttachmentBtnWrap","_templateObject7","DeskPositioningWrap","_templateObject8","TextAreaLabel","label","_templateObject9","TextArea","textarea","_templateObject10","RestrictionMsg","p","_templateObject11","ErrorMsg","_templateObject12","AttachmentBlock","_templateObject13","PostBtn","button","_templateObject14","accentBtn","AttachmentList","ul","_templateObject15","Form","_ref","$variant","ShowMoreFiltersWrap","subtitleStyle","_ref2","gradientTextHover","Label","FiltersList","FakeInputBlock","FakeInput","ResetSearchBtnWrap","FiltersBtn","SearchBtn","CreateTaskLink","Link","ListArrow","_jsxs","xmlns","width","height","viewBox","fill","children","_jsx","d","stroke","strokeWidth","strokeMiterlimit","strokeLinecap","strokeLinejoin","id","cx","cy","r","gradientUnits","gradientTransform","stopColor","offset","showMore","variant","setCategoriesFilters","setRegionsFilters","maxFiltersLength","areCategoriesEmpty","isRegionEmpty","setAreCategoriesEmpty","setIsRegionEmpty","defaultCheckedCategories","defaultCheckedRegions","shouldResetElements","isUpdating","categories","setCategories","useState","regions","setRegions","categoriesSelectedCount","setCategoriesSelectedCount","length","regionsSelectedCount","setRegionsSelectedCount","restrictedCheckbox","setRestrictedCheckbox","location","useLocation","t","i18n","useTranslation","useEffect","async","categs","getAllCategories","regs","getAllRegions","ivanoFrankivskIndex","findIndex","reg","regionEn","updatedRegs","regionUa","fetchFilters","disallowCheckingFilter","target","quantity","isChecked","checked","changeFn","name","selectedCount","prev","checkboxProps","filterType","element","find","el","_Fragment","className","to","concat","pathname","state","from","slice","map","iconTag","categoryNameEn","categoryNameUa","type","value","defaultChecked","onChange","_ref3","disabled","filter","href","sprite","language","capitalizeStr","_ref4","index","_ref5","toLowerCase"],"sourceRoot":""}