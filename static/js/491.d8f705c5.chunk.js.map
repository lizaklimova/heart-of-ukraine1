{"version":3,"file":"static/js/491.d8f705c5.chunk.js","mappings":"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","sources":["components/Auth/SignUpForm/SignUpForm.styled.jsx","components/Loaders/SmallSpinner/SmallSpinner.jsx","components/Tasks/ConfirmationModal/ConfirmationModal.styled.jsx","components/Tasks/ConfirmationModal/RegionsSelect/RegionsSelect.styled.jsx","components/Tasks/ConfirmationModal/RegionsSelect/RegionsSelect.jsx","assets/icons/TrashIcon.jsx","components/Tasks/FiltersForm/FiltersForm.jsx","components/Tasks/SuccessModal/SuccessModal.styled.jsx","components/Tasks/SuccessModal/SuccessModal.jsx","assets/icons/PlusIcon.jsx","components/Tasks/ConfirmationModal/ConfirmationModal.jsx","components/Tasks/NoFoundTasksMsg/NoFoundTasksMsg.styled.jsx","components/Tasks/NoFoundTasksMsg/NoFoundTasksMsg.jsx","components/Tasks/Tasks.jsx","schemas/changeSchema.js","schemas/registerSchema.js","schemas/emailSchema.js","schemas/passwordSchema.js","schemas/createTaskSchema.js","schemas/confirmApplicationSchema.js","schemas/changePassworsSchema.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const PrivacyLabel = styled.label`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  gap: 8px;\n\n  ${({ $variant }) =>\n    $variant === \"confirm\" &&\n    \"align-items: center;justify-content: flex-start;\"}\n\n  input {\n    min-width: 24px;\n    height: 24px;\n    display: none;\n  }\n\n  input:checked + div svg {\n    display: block;\n  }\n\n  input:checked + div {\n    transition: border-color 150ms linear;\n    border-color: #787d83;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 100%;\n    align-items: center;\n    justify-content: flex-start;\n    margin-top: 30px;\n\n    ${({ $variant }) => $variant === \"confirm\" && \" margin-top: 0;\"}\n  }\n`;\n\nexport const CheckBox = styled.div`\n  position: absolute;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 24px;\n  height: 24px;\n  border-radius: 4px;\n  border: 1px solid #d8dee4;\n  background-color: #f5f5f5;\n\n  &.invalid {\n    border-color: #fe4747;\n  }\n\n  svg {\n    display: none;\n  }\n`;\n\nexport const PrivacyText = styled.p`\n  padding-left: 32px;\n  font-size: 14px;\n  color: #0b1c24;\n  line-height: 1.5;\n  margin-top: -3px;\n\n  a {\n    color: #a7552b !important;\n    transition: color 150ms linear;\n\n    &:hover,\n    &:focus {\n      color: #872e00 !important;\n    }\n\n    &:active {\n      color: #5a1e00 !important;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 2px;\n  }\n`;\n","import { TailSpin } from \"react-loader-spinner\";\n\nconst SmallSpinner = ({ width, height, color = \"#fff\" }) => {\n  return (\n    <TailSpin\n      visible={true}\n      height={width}\n      width={height}\n      color={color}\n      ariaLabel=\"tail-spin-loading\"\n      radius=\"1\"\n    />\n  );\n};\n\nexport default SmallSpinner;\n","import styled, { css } from \"styled-components\";\nimport { backdropStyles } from \"../SuccessModal/SuccessModal.styled\";\n\nconst inputStyles = css`\n  width: 100%;\n  padding: 14px 12px;\n  border-radius: 8px;\n  border: 2px solid #cde3fa;\n  background-color: #f5f5f5;\n  color: #0b1c24;\n  font-family: Nunito;\n  font-size: 16px;\n  line-height: 1.25;\n`;\n\nexport const ConfirmBackdrop = styled.div`\n  ${backdropStyles}\n`;\n\nexport const ConfirmModal = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 95%;\n  height: 97%;\n  max-height: 1126px;\n  padding: 100px 40px;\n  border-radius: 16px;\n  background-color: #f9f9fc;\n  overflow-y: auto;\n  z-index: 11;\n\n  &::-webkit-scrollbar-track {\n    margin: 10px 0;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 730px;\n    padding: 80px 40px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 900px;\n    padding: 70px 120px;\n  }\n\n  button#close {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    background-color: transparent;\n    padding: 0;\n\n    svg {\n      fill: #a7552b;\n      transition: fill 150ms linear;\n    }\n\n    &:hover svg,\n    &:focus svg {\n      fill: #872e00;\n    }\n\n    &:active svg {\n      fill: #5a1e00;\n    }\n\n    @media screen and (min-width: 768px) {\n      top: 25px;\n      right: 25px;\n    }\n  }\n`;\n\nexport const ModalText = styled.p`\n  font-family: Nunito;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.5;\n  text-align: center;\n  margin: 0 auto 40px auto;\n  max-width: 311px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n    max-width: 471px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 22px;\n  }\n`;\n\nexport const ConfirmForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n`;\n\nexport const ConfirmLabel = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-family: Nunito;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.25;\n  color: #415158;\n\n  textarea {\n    ${inputStyles}\n    height: 144px;\n    resize: none;\n  }\n`;\n\nexport const InputField = styled.input`\n  ${inputStyles}\n`;\n\nexport const OpenSelectBtn = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 10px;\n  ${({ $isSelectOpen }) => $isSelectOpen && \"transform: rotate(180deg);\"}\n\n  &:hover svg,\n    &:focus svg {\n    fill: #872e00;\n  }\n\n  &:active svg {\n    fill: #5a1e00;\n  }\n\n  svg {\n    fill: #a7552b;\n    transform: scale(0.7);\n    transition: fill 150ms linear;\n  }\n`;\n\nexport const ConfirmSubmitBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: normal;\n  color: #fff;\n  width: 100%;\n  max-width: 343px;\n  padding: 12px 24px;\n  margin: 32px auto 0 auto;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 26px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 10px;\n  }\n\n  &:disabled {\n    opacity: 0.6;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const SelectBlock = styled.div`\n  position: absolute;\n  right: 0;\n  top: 100%;\n  z-index: 10;\n  min-width: 253px;\n  min-height: 250px;\n  padding: 15px 12px;\n  border-radius: 16px;\n  background: #fff;\n  box-shadow: 0px 3px 6px 0px rgba(122, 127, 170, 0.25);\n\n  ul {\n    max-height: 215px;\n    overflow-y: auto;\n\n    &::-webkit-scrollbar-track {\n      visibility: hidden !important;\n    }\n\n    li {\n      cursor: pointer;\n      margin-bottom: 23px;\n\n      &:hover button,\n      &:focus button {\n        background: conic-gradient(\n          from -3deg at 100% -13%,\n          #ffa502 0deg,\n          #c85120 360deg\n        );\n        background-clip: text;\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n      }\n    }\n\n    li button {\n      width: 100%;\n      display: flex;\n      align-items: center;\n      font-family: Montserrat;\n      font-size: 16px;\n      text-transform: capitalize;\n      font-weight: 600;\n      line-height: normal;\n      color: #053041;\n    }\n\n    :last-child {\n      margin-bottom: 0;\n    }\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { getAllRegions } from \"api\";\nimport { SelectBlock } from \"./RegionsSelect.styled\";\n\nconst RegionsSelect = ({ closeSelect, choseRegion }) => {\n  const [regions, setRegions] = useState([]);\n\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    const fetchRegions = async () => {\n      const response = await getAllRegions();\n\n      const ivanoFrankivskIndex = response?.findIndex(\n        (reg) => reg.regionEn === \"IVANO_FRANKIVSK\"\n      );\n\n      const updatedRegs = [...response];\n      updatedRegs[ivanoFrankivskIndex] = {\n        regionEn: \"IVANO-FRANKIVSK\",\n        regionUa: \"ІВАНО-ФРАНКІВСЬКА\",\n      };\n\n      setRegions(updatedRegs);\n    };\n\n    fetchRegions();\n  }, []);\n\n  const makeCapitalizedWord = (word) => {\n    return word.slice(0, 1).toUpperCase() + word.slice(1).toLowerCase();\n  };\n\n  const makeOptionValue = (region, word) => {\n    if (\n      region.includes(\"ІВАНО-ФРАНКІВСЬК\") ||\n      region.includes(\"IVANO-FRANKIVSK\")\n    ) {\n      return `${region\n        .split(\"-\")\n        .map((word) => `${makeCapitalizedWord(word)}`)\n        .join(\"-\")} ${word}`;\n    }\n\n    if (region.includes(\"КРИМ\") || region.includes(\"CRIMEA\")) {\n      return `${makeCapitalizedWord(region)}`;\n    }\n\n    return `${makeCapitalizedWord(region)} ${word}`;\n  };\n\n  return (\n    <SelectBlock>\n      <ul>\n        {regions?.length > 0 &&\n          regions.map((region) => (\n            <li key={region.regionEn}>\n              <button\n                type=\"button\"\n                data-region={\n                  i18n.language === \"uk\"\n                    ? makeOptionValue(region.regionUa, \"область\")\n                    : makeOptionValue(region.regionEn, \"region\")\n                }\n                data-regionen={region.regionEn}\n                onClick={(event) => {\n                  choseRegion(event);\n                  closeSelect();\n                }}\n              >\n                {i18n.language === \"uk\"\n                  ? region.regionUa.toLowerCase()\n                  : region.regionEn.toLowerCase()}\n              </button>\n            </li>\n          ))}\n      </ul>\n    </SelectBlock>\n  );\n};\n\nexport default RegionsSelect;\n","const TrashIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"25\"\n      height=\"24\"\n      viewBox=\"0 0 25 24\"\n      fill=\"none\"\n    >\n      <path\n        d=\"M10.5 6H14.5C14.5 5.46957 14.2893 4.96086 13.9142 4.58579C13.5391 4.21071 13.0304 4 12.5 4C11.9696 4 11.4609 4.21071 11.0858 4.58579C10.7107 4.96086 10.5 5.46957 10.5 6ZM8.5 6C8.5 4.93913 8.92143 3.92172 9.67157 3.17157C10.4217 2.42143 11.4391 2 12.5 2C13.5609 2 14.5783 2.42143 15.3284 3.17157C16.0786 3.92172 16.5 4.93913 16.5 6H21.5C21.7652 6 22.0196 6.10536 22.2071 6.29289C22.3946 6.48043 22.5 6.73478 22.5 7C22.5 7.26522 22.3946 7.51957 22.2071 7.70711C22.0196 7.89464 21.7652 8 21.5 8H20.618L19.732 18.34C19.6468 19.3385 19.19 20.2686 18.4519 20.9463C17.7137 21.6241 16.7481 22.0001 15.746 22H9.254C8.25191 22.0001 7.28628 21.6241 6.54815 20.9463C5.81002 20.2686 5.35318 19.3385 5.268 18.34L4.382 8H3.5C3.23478 8 2.98043 7.89464 2.79289 7.70711C2.60536 7.51957 2.5 7.26522 2.5 7C2.5 6.73478 2.60536 6.48043 2.79289 6.29289C2.98043 6.10536 3.23478 6 3.5 6H8.5ZM15.5 12C15.5 11.7348 15.3946 11.4804 15.2071 11.2929C15.0196 11.1054 14.7652 11 14.5 11C14.2348 11 13.9804 11.1054 13.7929 11.2929C13.6054 11.4804 13.5 11.7348 13.5 12V16C13.5 16.2652 13.6054 16.5196 13.7929 16.7071C13.9804 16.8946 14.2348 17 14.5 17C14.7652 17 15.0196 16.8946 15.2071 16.7071C15.3946 16.5196 15.5 16.2652 15.5 16V12ZM10.5 11C10.7652 11 11.0196 11.1054 11.2071 11.2929C11.3946 11.4804 11.5 11.7348 11.5 12V16C11.5 16.2652 11.3946 16.5196 11.2071 16.7071C11.0196 16.8946 10.7652 17 10.5 17C10.2348 17 9.98043 16.8946 9.79289 16.7071C9.60536 16.5196 9.5 16.2652 9.5 16V12C9.5 11.7348 9.60536 11.4804 9.79289 11.2929C9.98043 11.1054 10.2348 11 10.5 11ZM7.26 18.17C7.3026 18.6694 7.53117 19.1346 7.90044 19.4735C8.26972 19.8124 8.75278 20.0003 9.254 20H15.746C16.2469 19.9998 16.7294 19.8117 17.0983 19.4728C17.4671 19.134 17.6954 18.6691 17.738 18.17L18.61 8H6.39L7.26 18.17Z\"\n        fill=\"url(#paint0_angular_581_4676)\"\n      />\n      <defs>\n        <radialGradient\n          id=\"paint0_angular_581_4676\"\n          cx=\"0\"\n          cy=\"0\"\n          r=\"1\"\n          gradientUnits=\"userSpaceOnUse\"\n          gradientTransform=\"translate(22.5 -0.599995) rotate(-93.2878) scale(37.662 40.6351)\"\n        >\n          <stop stopColor=\"#FFA502\" />\n          <stop offset=\"1\" stopColor=\"#C85120\" />\n        </radialGradient>\n      </defs>\n    </svg>\n  );\n};\n\nexport default TrashIcon;\n","import { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSearchParams } from \"react-router-dom\";\nimport {\n  AVAILABLE_CATEGORIES_LENGTH,\n  MAX_MOB_LENGTH_FOR_FILTERS,\n  MAX_TAB_LENGTH_FOR_FILTERS,\n} from \"constants\";\nimport { determineFiltersLength } from \"helpers\";\nimport TrashIcon from \"assets/icons/TrashIcon\";\nimport SearchFiltersList from \"../SearchFiltersList\";\nimport {\n  Form,\n  FiltersBtn,\n  ResetSearchBtnWrap,\n  SearchBtn,\n} from \"./FiltersForm.styled\";\n\nconst FiltersForm = ({\n  variant,\n  handleFiltersSearch,\n  setCategoriesFilters,\n  setRegionsFilters,\n  setAreFiltersDeleted,\n  categoriesSearch,\n  regionsSearch,\n  defaultCheckedCategories,\n  defaultCheckedRegions,\n}) => {\n  const [maxFiltersLength, setMaxFiltersLength] = useState(\n    determineFiltersLength(variant)\n  );\n  // eslint-disable-next-line\n  const [_, setSearchParams] = useSearchParams();\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth >= 1440) {\n        setMaxFiltersLength(AVAILABLE_CATEGORIES_LENGTH);\n      } else if (window.innerWidth <= 767) {\n        setMaxFiltersLength(MAX_MOB_LENGTH_FOR_FILTERS);\n      } else {\n        setMaxFiltersLength(MAX_TAB_LENGTH_FOR_FILTERS);\n      }\n    };\n\n    if (variant !== \"allFilters\")\n      window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [variant]);\n\n  return (\n    <Form $variant={variant} onSubmit={handleFiltersSearch}>\n      <SearchFiltersList\n        showMore={true}\n        variant={variant}\n        setCategoriesFilters={setCategoriesFilters}\n        setRegionsFilters={setRegionsFilters}\n        maxFiltersLength={maxFiltersLength}\n        defaultCheckedCategories={defaultCheckedCategories}\n        defaultCheckedRegions={defaultCheckedRegions}\n      />\n      <ResetSearchBtnWrap\n        className={variant === \"allFilters\" ? \"all-filters\" : \"\"}\n      >\n        <SearchBtn\n          className=\"accent-button\"\n          type=\"submit\"\n          aria-label=\"Search the tasks by filters\"\n          disabled={!categoriesSearch.length && !regionsSearch[0]}\n        >\n          {t(\"tasks.search\")}\n        </SearchBtn>\n        <FiltersBtn\n          type=\"reset\"\n          aria-label=\"Reset filters\"\n          onClick={() => {\n            setSearchParams({});\n            setRegionsFilters([]);\n            setCategoriesFilters([]);\n\n            if (setAreFiltersDeleted) {\n              setAreFiltersDeleted(true);\n            }\n          }}\n        >\n          {t(\"tasks.resetFilters\")}\n          <TrashIcon />\n        </FiltersBtn>\n      </ResetSearchBtnWrap>\n    </Form>\n  );\n};\n\nexport default FiltersForm;\n","import styled, { css } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { gradientTextHover } from \"../Tasks.styled\";\n\nexport const backdropStyles = css`\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(33, 33, 33, 0.2);\n  z-index: 10;\n`;\n\nexport const Backdrop = styled.div`\n  ${backdropStyles}\n`;\n\nexport const Modal = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 90%;\n  max-width: 361px;\n  min-height: 500px;\n  padding: 58px 20px 58px 20px;\n  border-radius: 16px;\n  background: #fefefe;\n  box-shadow: 0px 4px 12px 0px rgba(112, 122, 167, 0.25);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  button#close {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    background-color: transparent;\n    padding: 0;\n\n    svg {\n      fill: #a7552b;\n      transition: fill 150ms linear;\n    }\n\n    &:hover svg,\n    &:focus svg {\n      fill: #872e00;\n    }\n\n    &:active svg {\n      fill: #5a1e00;\n    }\n\n    @media screen and (min-width: 768px) {\n      top: 25px;\n      right: 25px;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 616px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 926px;\n  }\n`;\n\nexport const ModalTitle = styled.h4`\n  font-size: 32px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.5;\n  color: #204250;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 38px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 48px;\n  }\n`;\n\nexport const ModalText = styled.p`\n  font-family: Nunito;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 1.5;\n  text-align: center;\n  color: #0b1c24;\n  margin-bottom: 32px;\n\n  @media screen and (min-width: 1440px) {\n    font-size: 22px;\n  }\n`;\n\nexport const ModalPic = styled.svg`\n  fill: none;\n  margin-bottom: 56px;\n`;\n\nexport const ModalLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  max-width: 343px;\n  padding: 12px 24px;\n  color: #fff;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.5;\n  cursor: pointer;\n\n  &.accent-button {\n    box-shadow: 0px 4px 25px 0px rgba(93, 93, 93, 0.5);\n  }\n\n  &.secondary-button {\n    background: conic-gradient(\n      from -3deg at 100% -13%,\n      #ffa502 0deg,\n      #c85120 360deg\n    );\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    margin-top: 32px;\n    ${gradientTextHover}\n  }\n`;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport sprite from \"assets/icons/sprite.svg\";\nimport {\n  Backdrop,\n  Modal,\n  ModalLink,\n  ModalPic,\n  ModalText,\n  ModalTitle,\n} from \"./SuccessModal.styled\";\n\nconst SuccessModal = ({\n  variant,\n  setShowSuccessModal,\n  title,\n  text,\n  accentBtnText,\n  setShouldResetElements,\n}) => {\n  const location = useLocation();\n  const { t } = useTranslation();\n  // eslint-disable-next-line\n  const closeModal = () => {\n    setShowSuccessModal(false);\n    document.body.style.overflow = \"visible\";\n    if (variant === \"create\") {\n      setShouldResetElements(true);\n    }\n  };\n\n  useEffect(() => {\n    const handleESCClose = (event) => {\n      if (event.code === \"Escape\") {\n        closeModal();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleESCClose);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleESCClose);\n    };\n  }, [closeModal]);\n\n  return (\n    <Backdrop\n      onClick={({ target, currentTarget }) => {\n        if (target === currentTarget) {\n          setShowSuccessModal(false);\n          document.body.style.overflow = \"visible\";\n          if (variant === \"create\") {\n            setShouldResetElements(true);\n          }\n        }\n      }}\n    >\n      <Modal>\n        <button\n          id=\"close\"\n          type=\"button\"\n          aria-label=\"Close modal\"\n          onClick={closeModal}\n        >\n          <svg width={48} height={48}>\n            <use href={`${sprite}#icon-close`}></use>\n          </svg>\n        </button>\n        <ModalTitle>{t(title)}</ModalTitle>\n        <ModalText>{t(text)}</ModalText>\n        <ModalPic width={177} height={177}>\n          <use href={`${sprite}#icon-success`}></use>\n        </ModalPic>\n\n        <ModalLink\n          to={\n            variant === \"apply\"\n              ? `/profile/responses${\n                  location?.pathname === \"/needHelp\" ? \"/need\" : \"/provide\"\n                }`\n              : \"/\"\n          }\n          state={{ from: location }}\n          className=\"accent-button\"\n          onClick={() => (document.body.style.overflow = \"visible\")}\n        >\n          {t(accentBtnText)}\n        </ModalLink>\n\n        {variant === \"apply\" && (\n          <ModalLink\n            to=\"/\"\n            className=\"secondary-button\"\n            state={{ from: location }}\n            onClick={() => (document.body.style.overflow = \"visible\")}\n          >\n            {t(\"createTask.successWindow.backHome\")}\n          </ModalLink>\n        )}\n      </Modal>\n    </Backdrop>\n  );\n};\n\nexport default SuccessModal;\n","const PlusIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"40\"\n      height=\"40\"\n      viewBox=\"0 0 40 40\"\n      fill=\"none\"\n    >\n      <path\n        d=\"M21 7V34\"\n        stroke=\"url(#paint0_angular_646_4831)\"\n        strokeWidth=\"3\"\n        strokeMiterlimit=\"10\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M7 21H34\"\n        stroke=\"url(#paint1_angular_646_4831)\"\n        strokeWidth=\"3\"\n        strokeMiterlimit=\"10\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <defs>\n        <radialGradient\n          id=\"paint0_angular_646_4831\"\n          cx=\"0\"\n          cy=\"0\"\n          r=\"1\"\n          gradientUnits=\"userSpaceOnUse\"\n          gradientTransform=\"translate(22 3.49001) rotate(-90.1219) scale(50.7601 2.0351)\"\n        >\n          <stop stopColor=\"#FFA502\" />\n          <stop offset=\"1\" stopColor=\"#C85120\" />\n        </radialGradient>\n        <radialGradient\n          id=\"paint1_angular_646_4831\"\n          cx=\"0\"\n          cy=\"0\"\n          r=\"1\"\n          gradientUnits=\"userSpaceOnUse\"\n          gradientTransform=\"translate(34 20.87) rotate(-147.189) scale(3.4695 29.7743)\"\n        >\n          <stop stopColor=\"#FFA502\" />\n          <stop offset=\"1\" stopColor=\"#C85120\" />\n        </radialGradient>\n      </defs>\n    </svg>\n  );\n};\n\nexport default PlusIcon;\n","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFormik } from \"formik\";\nimport { respondToHelpRequest } from \"api/requests\";\nimport { confirmApplicationSchema } from \"schemas\";\nimport {\n  selectUserFistName,\n  selectUserLastName,\n  selectUserNumber,\n} from \"../../../redux/auth/authSelectors\";\nimport sprite from \"assets/icons/sprite.svg\";\nimport RegionsSelect from \"./RegionsSelect\";\nimport SmallSpinner from \"components/Loaders/SmallSpinner\";\nimport {\n  CheckBox,\n  PrivacyLabel,\n  PrivacyText,\n} from \"components/Auth/SignUpForm/SignUpForm.styled\";\nimport {\n  ConfirmBackdrop,\n  ConfirmModal,\n  ConfirmForm,\n  ConfirmLabel,\n  ModalText,\n  InputField,\n  ConfirmSubmitBtn,\n  OpenSelectBtn,\n} from \"./ConfirmationModal.styled\";\nimport { ErrorMsg } from \"../CreateTask/CreateTaskForm/CreateTaskForm.styled\";\n\nconst ConfirmationModal = ({\n  reqId,\n  setIsConfirmApplicationOpen,\n  setIsSuccessModalOpen,\n  setIsSuccessOfferModalOpen,\n}) => {\n  const [submitError, setSubmitError] = useState(null);\n  const [regionForBackend, setRegionForBackend] = useState(\"\");\n  const [isRegionsSelectOpen, setIsRegionsSelectOpen] = useState(false);\n\n  const location = useLocation();\n\n  const { t, i18n } = useTranslation();\n  const firstName = useSelector(selectUserFistName);\n  const lastName = useSelector(selectUserLastName);\n  const phoneNumber = useSelector(selectUserNumber);\n  // eslint-disable-next-line\n  const closeModal = () => {\n    setIsConfirmApplicationOpen(false);\n    document.body.style.overflow = \"visible\";\n  };\n\n  useEffect(() => {\n    const handleESCClose = (event) => {\n      if (event.code === \"Escape\") {\n        closeModal();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleESCClose);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleESCClose);\n    };\n  }, [closeModal]);\n\n  const CONFIRM_INIT_VALUES = {\n    firstName: firstName.split(\" \")[0],\n    lastName,\n    phoneNumber: phoneNumber ? phoneNumber : \"+380\",\n    region: \"\",\n    comment: \"\",\n    agreement: false,\n  };\n\n  const onSubmit = async ({\n    firstName,\n    lastName,\n    phoneNumber,\n    comment,\n    agreement,\n  }) => {\n    const formData = {\n      firstName,\n      lastName,\n      phoneNumber,\n      region: regionForBackend,\n      comment,\n      agreement,\n    };\n    const isFormDataValid = await confirmApplicationSchema.isValid(formData);\n    if (!isFormDataValid) return;\n    delete formData.agreement;\n\n    const res = await respondToHelpRequest(formData, reqId);\n\n    if (res !== \"\") {\n      const { enErrorText, uaErrorText } = res?.response?.data?.errorText;\n      setSubmitError(t(i18n.language === \"uk\" ? uaErrorText : enErrorText));\n    } else {\n      setIsConfirmApplicationOpen(false);\n\n      location?.pathname === \"/needHelp\"\n        ? setIsSuccessModalOpen(true)\n        : setIsSuccessOfferModalOpen(true);\n      document.body.style.overflow = \"hidden\";\n    }\n  };\n\n  const {\n    errors,\n    touched,\n    getFieldProps,\n    handleSubmit,\n    isSubmitting,\n    setFieldValue,\n  } = useFormik({\n    initialValues: CONFIRM_INIT_VALUES,\n    validationSchema: confirmApplicationSchema,\n    onSubmit,\n  });\n\n  return (\n    <>\n      <ConfirmBackdrop\n        onClick={({ target, currentTarget }) => {\n          if (target === currentTarget) {\n            setIsConfirmApplicationOpen(false);\n            document.body.style.overflow = \"visible\";\n          }\n        }}\n      >\n        <ConfirmModal>\n          <button\n            id=\"close\"\n            type=\"button\"\n            aria-label=\"Close modal\"\n            onClick={closeModal}\n          >\n            <svg width={48} height={48}>\n              <use href={`${sprite}#icon-close`}></use>\n            </svg>\n          </button>\n          <ModalText>{t(\"confirmationModal.text\")}</ModalText>\n\n          <ConfirmForm onSubmit={handleSubmit}>\n            <ConfirmLabel>\n              {t(\"confirmationModal.name\")}\n              <InputField\n                type=\"text\"\n                name=\"firstName\"\n                placeholder={t(\"confirmationModal.yourName\")}\n                maxLength={50}\n                onFocus={() => setIsRegionsSelectOpen(false)}\n                {...getFieldProps(\"firstName\")}\n              />\n              {errors.firstName && touched.firstName && (\n                <ErrorMsg>{t(errors.firstName)}</ErrorMsg>\n              )}\n            </ConfirmLabel>\n            <ConfirmLabel>\n              {t(\"confirmationModal.surname\")}\n              <InputField\n                type=\"text\"\n                name=\"lastName\"\n                maxLength={50}\n                placeholder={t(\"confirmationModal.yourSurname\")}\n                onFocus={() => setIsRegionsSelectOpen(false)}\n                {...getFieldProps(\"lastName\")}\n              />\n              {errors.lastName && touched.lastName && (\n                <ErrorMsg>{t(errors.lastName)}</ErrorMsg>\n              )}\n            </ConfirmLabel>\n            <ConfirmLabel>\n              {t(\"confirmationModal.phone\")}\n              <InputField\n                type=\"tel\"\n                name=\"phoneNumber\"\n                maxLength={13}\n                placeholder={t(\"confirmationModal.yourNum\")}\n                onFocus={() => setIsRegionsSelectOpen(false)}\n                {...getFieldProps(\"phoneNumber\")}\n              />\n              {errors.phoneNumber && touched.phoneNumber && (\n                <ErrorMsg>{t(errors.phoneNumber)}</ErrorMsg>\n              )}\n            </ConfirmLabel>\n            <ConfirmLabel>\n              {t(\"confirmationModal.region\")}\n              <InputField\n                type=\"text\"\n                name=\"region\"\n                placeholder={t(\"confirmationModal.yourRegion\")}\n                autoComplete=\"off\"\n                readOnly={true}\n                {...getFieldProps(\"region\")}\n              />\n\n              <OpenSelectBtn\n                $isSelectOpen={isRegionsSelectOpen}\n                type=\"button\"\n                aria-label=\"Open regions select\"\n                onClick={() => setIsRegionsSelectOpen((prev) => !prev)}\n              >\n                <svg width={24} height={20}>\n                  <use href={`${sprite}#icon-filter-arrow`}></use>\n                </svg>\n              </OpenSelectBtn>\n\n              {isRegionsSelectOpen && (\n                <RegionsSelect\n                  closeSelect={() => setIsRegionsSelectOpen(false)}\n                  choseRegion={(event) => {\n                    setFieldValue(\"region\", event.target.dataset.region);\n                    setRegionForBackend(event.target.dataset.regionen);\n                  }}\n                />\n              )}\n            </ConfirmLabel>\n            <ConfirmLabel>\n              {t(\"confirmationModal.comment\")}\n              <textarea\n                name=\"comment\"\n                placeholder={t(\"confirmationModal.yourComment\")}\n                maxLength={9000}\n                onFocus={() => setIsRegionsSelectOpen(false)}\n                {...getFieldProps(\"comment\")}\n              />\n              {submitError && <ErrorMsg>{submitError}</ErrorMsg>}\n            </ConfirmLabel>\n            <PrivacyLabel $variant=\"confirm\">\n              <input\n                type=\"checkbox\"\n                name=\"agreement\"\n                onFocus={() => setIsRegionsSelectOpen(false)}\n                {...getFieldProps(\"agreement\")}\n              />\n              <CheckBox\n                className={errors.agreement && touched.agreement && \"invalid\"}\n              >\n                <svg width={13} height={9}>\n                  <use href={`${sprite}#icon-checked`}></use>\n                </svg>\n              </CheckBox>\n              <PrivacyText>{t(\"confirmationModal.checkbox\")}</PrivacyText>\n            </PrivacyLabel>\n            <ConfirmSubmitBtn\n              type=\"submit\"\n              className=\"accent-button\"\n              disabled={Object.keys(errors).length > 0}\n            >\n              {isSubmitting ? (\n                <SmallSpinner width={20} height={20} />\n              ) : (\n                t(\"confirmationModal.send\")\n              )}\n            </ConfirmSubmitBtn>\n          </ConfirmForm>\n        </ConfirmModal>\n      </ConfirmBackdrop>\n    </>\n  );\n};\n\nexport default ConfirmationModal;\n","import styled from \"styled-components\";\n\nexport const NotFoundTasksSection = styled.section`\n  padding: 60px 0 120px 0;\n\n  img {\n    margin: 0 auto;\n  }\n\n  h5 {\n    font-size: 24px;\n    font-weight: 600;\n    line-height: 1.5;\n    text-align: center;\n    text-transform: uppercase;\n    color: #204250;\n    margin: 48px 0 20px 0;\n  }\n\n  p {\n    font-size: 18px;\n    line-height: 1.5;\n    text-align: center;\n    max-width: 361px;\n    margin: 0 auto;\n\n    a {\n      font-weight: 600;\n      color: #a7552b;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 117px;\n\n    img {\n      width: 500px;\n      height: 550px;\n    }\n\n    h5 {\n      font-size: 26px;\n      margin: 56px 0 28px 0;\n    }\n\n    p {\n      font-size: 20px;\n      max-width: 640px;\n\n      &.offers {\n        max-width: 670px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 120px;\n\n    img {\n      width: 685px;\n      height: 753px;\n    }\n\n    h5 {\n      font-size: 36px;\n      margin: 64px 0 32px 0;\n    }\n\n    p {\n      font-size: 24px;\n      max-width: 767px;\n\n      &.offers {\n        max-width: 800px;\n      }\n    }\n  }\n`;\n","import { useTranslation } from \"react-i18next\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport heartBoxPic from \"assets/images/tasks/emptyTasks.png\";\nimport { NotFoundTasksSection } from \"./NoFoundTasksMsg.styled\";\nimport { MainContainer } from \"layouts/MainContainer.styled\";\n\nconst NoFoundTasksMsg = ({ className }) => {\n  const { t } = useTranslation();\n  const location = useLocation();\n\n  return (\n    <NotFoundTasksSection>\n      <MainContainer>\n        <img src={heartBoxPic} alt=\"no tasks found\" width={300} height={330} />\n        <h5>{t(\"tasks.notFoundTitle\")}</h5>\n        <p className={className}>\n          {t(\"tasks.notFoundText\")}\n          <Link\n            to={\"/createTask\"}\n            state={{ from: location }}\n            className=\"accent-text\"\n          >\n            {t(\n              location?.pathname === \"/needHelp\"\n                ? \"tasks.createNewRequest\"\n                : \"tasks.createNewOffer\"\n            )}\n          </Link>\n        </p>\n      </MainContainer>\n    </NotFoundTasksSection>\n  );\n};\n\nexport default NoFoundTasksMsg;\n","import { useState, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation, useSearchParams, Link } from \"react-router-dom\";\nimport { STATUSES_VALUES } from \"constants\";\nimport sprite from \"assets/icons/sprite.svg\";\nimport { MainContainer } from \"layouts/MainContainer.styled\";\nimport PlusIcon from \"assets/icons/PlusIcon\";\nimport Card from \"./Card\";\nimport BackHomeBtn from \"../Auth/BackHomeBtn\";\nimport FiltersForm from \"./FiltersForm\";\nimport Pagination from \"../Pagination\";\nimport ConfirmationModal from \"./ConfirmationModal\";\nimport SuccessModal from \"./SuccessModal\";\nimport NoFoundTasksMsg from \"./NoFoundTasksMsg/NoFoundTasksMsg\";\nimport {\n  CreateOfferBlock,\n  TitleFilterBlock,\n  FiltersBlock,\n  TasksList,\n  TasksSection,\n  TasksTitle,\n} from \"./Tasks.styled\";\nimport { CreateTaskLink } from \"./FiltersForm/FiltersForm.styled.jsx\";\n\nconst Tasks = ({\n  cards,\n  currentPage,\n  setPage,\n  data,\n  totalPages,\n  setAreItemsFiltered,\n  setAreFiltersDeleted,\n  sortingOrder,\n  setSortingOrder,\n  title,\n  subtitle,\n  button,\n}) => {\n  const [categoriesSearch, setCategoriesSearch] = useState([]);\n  const [regionsSearch, setRegionsSearch] = useState([]);\n  const [defaultCheckedCategories, setDefaultCheckedCategories] = useState([]);\n  const [defaultCheckedRegions, setDefaultCheckedRegions] = useState([]);\n  const [requestId, setRequestId] = useState(null);\n  const [isConfirmApplicationOpen, setIsConfirmApplicationOpen] =\n    useState(false);\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\n  const [isSuccessOfferModalOpen, setIsSuccessOfferModalOpen] = useState(false);\n  // eslint-disable-next-line\n  const [_, setAreTasksSorted] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { t } = useTranslation();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (searchParams.get(\"additional\") && window.innerWidth < 1440) {\n      setPage(0);\n      setAreItemsFiltered(true);\n    }\n\n    setDefaultCheckedCategories(categoriesSearch);\n    setDefaultCheckedRegions(regionsSearch);\n\n    if (searchParams.get(\"categories\") || searchParams.get(\"regions\")) {\n      const categArr = [];\n      const regArr = [];\n\n      const checkedCategFilters = searchParams.get(\"categories\").split(\",\");\n      checkedCategFilters.forEach((fil) => categArr.push(fil));\n      setDefaultCheckedCategories(categArr);\n      setCategoriesSearch(categArr);\n\n      const checkedRegFilters = searchParams.get(\"regions\").split(\",\");\n      checkedRegFilters.forEach((fil) => regArr.push(fil));\n      setDefaultCheckedRegions(regArr);\n      setRegionsSearch(regArr);\n    }\n  }, [\n    searchParams,\n    categoriesSearch,\n    regionsSearch,\n    setAreItemsFiltered,\n    setPage,\n  ]);\n\n  const handleFiltersSearch = (event) => {\n    event.preventDefault();\n    setPage(0);\n\n    setSearchParams({\n      regions: regionsSearch.join(\",\"),\n      categories: categoriesSearch.join(\",\"),\n    });\n\n    setAreItemsFiltered(true);\n    setAreFiltersDeleted(false);\n  };\n\n  return (\n    <TasksSection>\n      <MainContainer>\n        <BackHomeBtn variant=\"tasks\" />\n\n        <TasksTitle>{t(title)}</TasksTitle>\n\n        <FiltersForm\n          handleFiltersSearch={handleFiltersSearch}\n          setCategoriesFilters={setCategoriesSearch}\n          setRegionsFilters={setRegionsSearch}\n          setAreFiltersDeleted={setAreFiltersDeleted}\n          categoriesSearch={categoriesSearch}\n          regionsSearch={regionsSearch}\n          defaultCheckedCategories={defaultCheckedCategories}\n          defaultCheckedRegions={defaultCheckedRegions}\n        />\n\n        <CreateOfferBlock>\n          <TitleFilterBlock>\n            <h3>{t(subtitle)}</h3>\n            <FiltersBlock $isSorted={sortingOrder === \"desc\"}>\n              <svg id=\"icon-filter\" width={35} height={35}>\n                <use href={`${sprite}#icon-filter`}></use>\n              </svg>\n\n              <button\n                type=\"button\"\n                aria-label=\"Sort tasks\"\n                onClick={() => {\n                  setAreTasksSorted((prev) => !prev);\n                  setSortingOrder(sortingOrder === \"asc\" ? \"desc\" : \"asc\");\n                }}\n              >\n                <svg id=\"icon-sorting\" width={10} height={18}>\n                  <use href={`${sprite}#icon-sort-arrow`}></use>\n                </svg>\n              </button>\n            </FiltersBlock>\n          </TitleFilterBlock>\n          <Link\n            to=\"/createTask\"\n            state={{ from: location }}\n            id=\"desk-link\"\n            className=\"accent-text\"\n          >\n            <PlusIcon />\n            {t(button)}\n          </Link>\n\n          <CreateTaskLink\n            className=\"accent-button\"\n            id=\"mob-link\"\n            state={{ from: location }}\n            to=\"/createTask\"\n          >\n            {t(button)}\n          </CreateTaskLink>\n        </CreateOfferBlock>\n\n        <div id=\"tasks-list\">\n          {data?.content?.filter(\n            (req) => req.requestType.requestTypeEn === cards\n          ).length > 0 ? (\n            <TasksList>\n              {data?.content\n                ?.filter((req) => req.requestType.requestTypeEn === cards)\n                .map((req, index) => {\n                  const { requestStatusEn } = req.requestStatus;\n                  if (\n                    requestStatusEn !== STATUSES_VALUES.done &&\n                    requestStatusEn !== STATUSES_VALUES.canceled\n                  ) {\n                    return (\n                      <Card\n                        key={`${req.id}/${index}`}\n                        requestData={req}\n                        setIsConfirmApplicationOpen={\n                          setIsConfirmApplicationOpen\n                        }\n                        setRequestId={setRequestId}\n                      />\n                    );\n                  }\n                  return null;\n                })}\n            </TasksList>\n          ) : (\n            <NoFoundTasksMsg\n              className={location?.pathname === \"/wantToHelp\" ? \"offers\" : \"\"}\n            />\n          )}\n        </div>\n        <Pagination\n          variant=\"tasks\"\n          currentPage={currentPage + 1}\n          totalPages={totalPages}\n          setPage={setPage}\n        />\n      </MainContainer>\n\n      {isConfirmApplicationOpen && (\n        <ConfirmationModal\n          reqId={requestId}\n          setIsConfirmApplicationOpen={setIsConfirmApplicationOpen}\n          setIsSuccessModalOpen={setIsSuccessModalOpen}\n          setIsSuccessOfferModalOpen={setIsSuccessOfferModalOpen}\n        />\n      )}\n\n      {isSuccessModalOpen && (\n        <SuccessModal\n          variant=\"apply\"\n          title={\"createTask.successWindow.sent\"}\n          text={\"createTask.successWindow.textApply\"}\n          accentBtnText={\"createTask.successWindow.myProfile\"}\n          setShowSuccessModal={setIsSuccessModalOpen}\n        />\n      )}\n\n      {isSuccessOfferModalOpen && (\n        <SuccessModal\n          variant=\"apply\"\n          title={\"createTask.successWindow.wellDone\"}\n          text={\"createTask.successWindow.textOffer\"}\n          accentBtnText={\"createTask.successWindow.myProfile\"}\n          setShowSuccessModal={setIsSuccessOfferModalOpen}\n        />\n      )}\n    </TasksSection>\n  );\n};\n\nexport default Tasks;\n","import * as Yup from \"yup\";\n\nconst changeSchema = Yup.object({\n  firstName: Yup.string()\n    .min(2, \"validation.name.min\")\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]+$/,\n      \"validation.name.matches\"\n    )\n    .required(\"validation.required\"),\n  lastName: Yup.string()\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]*$/,\n      \"validation.name.matches\"\n    )\n    .min(2, \"validation.name.min\")\n    .nullable(),\n  phoneNumber: Yup.string()\n    .matches(/^\\+380\\d{9}$/, \"validation.phone.invalid\")\n    .required(\"validation.required\"),\n  region: Yup.string()\n    .max(50, \"validation.reg.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]+$/,\n      \"validation.reg.matches\"\n    )\n    .nullable(),\n  organization: Yup.string().max(200, \"validation.organization.max\").nullable(),\n  comment: Yup.string().max(500, \"validation.about.max\").nullable(),\n});\n\nexport default changeSchema;\n","import * as Yup from \"yup\";\n\nconst registerSchema = Yup.object({\n  firstName: Yup.string()\n    .min(2, \"validation.name.min\")\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]+$/,\n      \"validation.name.matches\"\n    )\n    .required(\"validation.required\"),\n  lastName: Yup.string()\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]*$/,\n      \"validation.name.matches\"\n    )\n    .min(2, \"validation.name.min\")\n    .nullable(),\n  phoneNumber: Yup.string()\n    .matches(/^\\+380\\d{9}$/, \"validation.phone.invalid\")\n    .required(\"validation.required\"),\n  email: Yup.string()\n    .email(\"validation.email.invalid\")\n    .matches(\n      /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n      \"validation.email.invalid\"\n    )\n    .required(\"validation.required\"),\n  password: Yup.string()\n    .min(8, \"validation.password.length\")\n    .max(100, \"validation.password.length\")\n    .matches(/[A-Z]/, \"validation.password.uppercase\")\n    .matches(/[a-z]/, \"validation.password.lowercase\")\n    .matches(/[0-9]/, \"validation.password.digit\")\n    .matches(/^[a-zA-Z0-9]+$/, \"validation.password.specialSym\")\n    .required(\"validation.required\"),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\")], \"validation.password.confirm\")\n    .required(\"validation.required\"),\n  agreement: Yup.boolean().oneOf([true]).required(),\n});\n\nexport default registerSchema;\n","import * as Yup from \"yup\";\n\nconst emailSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"validation.email.invalid\")\n    .matches(\n      /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n      \"validation.email.invalid\"\n    )\n\n    .required(\"validation.required\"),\n});\n\nexport default emailSchema;\n","import * as Yup from \"yup\";\n\nconst passwordSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(8, \"validation.password.length\")\n    .max(100, \"validation.password.length\")\n    .matches(/[A-Z]/, \"validation.password.uppercase\")\n    .matches(/[a-z]/, \"validation.password.lowercase\")\n    .matches(/[0-9]/, \"validation.password.digit\")\n    .matches(/^[a-zA-Z0-9]+$/, \"validation.password.specialSym\")\n    .required(\"validation.required\"),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\")], \"validation.password.confirm\")\n    .required(\"validation.required\"),\n});\n\nexport default passwordSchema;\n","import * as Yup from \"yup\";\n\nconst createTaskSchema = Yup.object({\n  title: Yup.string()\n    .min(5, \"createTask.validation.titleMin\")\n    .max(100, \"createTask.validation.titleMax\")\n    .required(\"createTask.validation.enterData\"),\n  description: Yup.string()\n    .min(40, \"createTask.validation.descrMin\")\n    .max(9000)\n    .required(\"createTask.validation.enterData\"),\n  comment: Yup.string().max(9000),\n});\n\nexport default createTaskSchema;\n","import * as Yup from \"yup\";\n\nconst confirmApplicationSchema = Yup.object({\n  firstName: Yup.string()\n    .min(2, \"validation.name.min\")\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]+$/,\n      \"validation.name.matches\"\n    )\n    .required(\"validation.required\"),\n  lastName: Yup.string()\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]*$/,\n      \"validation.name.matches\"\n    )\n    .min(2, \"validation.name.min\")\n    .nullable(),\n  phoneNumber: Yup.string()\n    .matches(/^\\+380\\d{9}$/, \"validation.phone.invalid\")\n    .required(\"validation.required\"),\n  region: Yup.string().required(\"validation.required\"),\n  comment: Yup.string().max(9000),\n  agreement: Yup.boolean().oneOf([true]).required(),\n});\n\nexport default confirmApplicationSchema;\n","import * as Yup from \"yup\";\n\nconst changePasswordSchema = Yup.object().shape({\n  oldPassword: Yup.string().required(\"validation.required\"),\n  newPassword: Yup.string()\n    .min(8, \"validation.password.length\")\n    .max(100, \"validation.password.length\")\n    .matches(/[A-Z]/, \"validation.password.uppercase\")\n    .matches(/[a-z]/, \"validation.password.lowercase\")\n    .matches(/[0-9]/, \"validation.password.digit\")\n    .matches(/^[a-zA-Z0-9]+$/, \"validation.password.specialSym\")\n    .required(\"validation.required\"),\n  repeatNewPassword: Yup.string()\n    .oneOf([Yup.ref(\"newPassword\")], \"validation.password.confirm\")\n    .required(\"validation.required\"),\n});\n\nexport default changePasswordSchema;\n"],"names":["PrivacyLabel","styled","label","_templateObject","_taggedTemplateLiteral","_ref","$variant","_ref2","CheckBox","div","_templateObject2","PrivacyText","p","_templateObject3","width","height","color","_jsx","TailSpin","visible","ariaLabel","radius","inputStyles","css","ConfirmBackdrop","backdropStyles","ConfirmModal","ModalText","_templateObject4","ConfirmForm","form","_templateObject5","ConfirmLabel","_templateObject6","InputField","input","_templateObject7","OpenSelectBtn","button","_templateObject8","$isSelectOpen","ConfirmSubmitBtn","_templateObject9","SelectBlock","closeSelect","choseRegion","regions","setRegions","useState","i18n","useTranslation","useEffect","async","response","getAllRegions","ivanoFrankivskIndex","findIndex","reg","regionEn","updatedRegs","regionUa","fetchRegions","makeCapitalizedWord","word","slice","toUpperCase","toLowerCase","makeOptionValue","region","includes","concat","split","map","join","children","length","type","language","onClick","event","TrashIcon","_jsxs","xmlns","viewBox","fill","d","id","cx","cy","r","gradientUnits","gradientTransform","stopColor","offset","variant","handleFiltersSearch","setCategoriesFilters","setRegionsFilters","setAreFiltersDeleted","categoriesSearch","regionsSearch","defaultCheckedCategories","defaultCheckedRegions","maxFiltersLength","setMaxFiltersLength","determineFiltersLength","_","setSearchParams","useSearchParams","t","handleResize","window","innerWidth","AVAILABLE_CATEGORIES_LENGTH","MAX_MOB_LENGTH_FOR_FILTERS","MAX_TAB_LENGTH_FOR_FILTERS","addEventListener","removeEventListener","Form","onSubmit","SearchFiltersList","showMore","ResetSearchBtnWrap","className","SearchBtn","disabled","FiltersBtn","Backdrop","Modal","ModalTitle","h4","ModalPic","svg","ModalLink","Link","gradientTextHover","setShowSuccessModal","title","text","accentBtnText","setShouldResetElements","location","useLocation","closeModal","document","body","style","overflow","handleESCClose","code","target","currentTarget","href","sprite","to","pathname","state","from","PlusIcon","stroke","strokeWidth","strokeMiterlimit","strokeLinecap","strokeLinejoin","reqId","setIsConfirmApplicationOpen","setIsSuccessModalOpen","setIsSuccessOfferModalOpen","submitError","setSubmitError","regionForBackend","setRegionForBackend","isRegionsSelectOpen","setIsRegionsSelectOpen","firstName","useSelector","selectUserFistName","lastName","selectUserLastName","phoneNumber","selectUserNumber","CONFIRM_INIT_VALUES","comment","agreement","errors","touched","getFieldProps","handleSubmit","isSubmitting","setFieldValue","useFormik","initialValues","validationSchema","confirmApplicationSchema","formData","isValid","res","respondToHelpRequest","_res$response","_res$response$data","enErrorText","uaErrorText","data","errorText","_Fragment","_ref3","name","placeholder","maxLength","onFocus","ErrorMsg","autoComplete","readOnly","prev","RegionsSelect","dataset","regionen","Object","keys","SmallSpinner","NotFoundTasksSection","section","MainContainer","src","heartBoxPic","alt","_data$content","_data$content2","cards","currentPage","setPage","totalPages","setAreItemsFiltered","sortingOrder","setSortingOrder","subtitle","setCategoriesSearch","setRegionsSearch","setDefaultCheckedCategories","setDefaultCheckedRegions","requestId","setRequestId","isConfirmApplicationOpen","isSuccessModalOpen","isSuccessOfferModalOpen","setAreTasksSorted","searchParams","get","categArr","regArr","forEach","fil","push","TasksSection","BackHomeBtn","TasksTitle","FiltersForm","preventDefault","categories","CreateOfferBlock","TitleFilterBlock","FiltersBlock","$isSorted","CreateTaskLink","content","filter","req","requestType","requestTypeEn","TasksList","index","requestStatusEn","requestStatus","STATUSES_VALUES","done","canceled","Card","requestData","NoFoundTasksMsg","Pagination","ConfirmationModal","SuccessModal","Yup","min","max","matches","required","nullable","organization","email","password","repeatPassword","oneOf","shape","description","oldPassword","newPassword","repeatNewPassword"],"sourceRoot":""}