{"version":3,"file":"static/js/193.b849d5a1.chunk.js","mappings":"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","sources":["components/Loaders/SmallSpinner/SmallSpinner.jsx","components/Tasks/SuccessModal/SuccessModal.styled.jsx","components/Tasks/SuccessModal/SuccessModal.jsx","assets/icons/AddAttachmentIcon.jsx","components/Tasks/CreateTask/CreateTaskForm/CreateTaskForm.jsx","components/Tasks/CreateTask/CreateTask.jsx","pages/CreateTaskPage.jsx","schemas/changeSchema.js","schemas/registerSchema.js","schemas/emailSchema.js","schemas/passwordSchema.js","schemas/createTaskSchema.js","schemas/confirmApplicationSchema.js","schemas/changePassworsSchema.js"],"sourcesContent":["import { TailSpin } from \"react-loader-spinner\";\n\nconst SmallSpinner = ({ width, height, color = \"#fff\" }) => {\n  return (\n    <TailSpin\n      visible={true}\n      height={width}\n      width={height}\n      color={color}\n      ariaLabel=\"tail-spin-loading\"\n      radius=\"1\"\n    />\n  );\n};\n\nexport default SmallSpinner;\n","import styled, { css } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { gradientTextHover } from \"../Tasks.styled\";\n\nexport const backdropStyles = css`\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(33, 33, 33, 0.2);\n  z-index: 10;\n`;\n\nexport const Backdrop = styled.div`\n  ${backdropStyles}\n`;\n\nexport const Modal = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 90%;\n  max-width: 361px;\n  min-height: 500px;\n  padding: 58px 20px 58px 20px;\n  border-radius: 16px;\n  background: #fefefe;\n  box-shadow: 0px 4px 12px 0px rgba(112, 122, 167, 0.25);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  button#close {\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    background-color: transparent;\n    padding: 0;\n\n    svg {\n      fill: #a7552b;\n      transition: fill 150ms linear;\n    }\n\n    &:hover svg,\n    &:focus svg {\n      fill: #872e00;\n    }\n\n    &:active svg {\n      fill: #5a1e00;\n    }\n\n    @media screen and (min-width: 768px) {\n      top: 25px;\n      right: 25px;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 616px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 926px;\n  }\n`;\n\nexport const ModalTitle = styled.h4`\n  font-size: 32px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.5;\n  color: #204250;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 38px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 48px;\n  }\n`;\n\nexport const ModalText = styled.p`\n  font-family: Nunito;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 1.5;\n  text-align: center;\n  color: #0b1c24;\n  margin-bottom: 32px;\n\n  @media screen and (min-width: 1440px) {\n    font-size: 22px;\n  }\n`;\n\nexport const ModalPic = styled.svg`\n  fill: none;\n  margin-bottom: 56px;\n`;\n\nexport const ModalLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  max-width: 343px;\n  padding: 12px 24px;\n  color: #fff;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.5;\n  cursor: pointer;\n\n  &.accent-button {\n    box-shadow: 0px 4px 25px 0px rgba(93, 93, 93, 0.5);\n  }\n\n  &.secondary-button {\n    background: conic-gradient(\n      from -3deg at 100% -13%,\n      #ffa502 0deg,\n      #c85120 360deg\n    );\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    margin-top: 32px;\n    ${gradientTextHover}\n  }\n`;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport sprite from \"assets/icons/sprite.svg\";\nimport {\n  Backdrop,\n  Modal,\n  ModalLink,\n  ModalPic,\n  ModalText,\n  ModalTitle,\n} from \"./SuccessModal.styled\";\n\nconst SuccessModal = ({\n  variant,\n  setShowSuccessModal,\n  title,\n  text,\n  accentBtnText,\n  setShouldResetElements,\n}) => {\n  const location = useLocation();\n  const { t } = useTranslation();\n  // eslint-disable-next-line\n  const closeModal = () => {\n    setShowSuccessModal(false);\n    document.body.style.overflow = \"visible\";\n    if (variant === \"create\") {\n      setShouldResetElements(true);\n    }\n  };\n\n  useEffect(() => {\n    const handleESCClose = (event) => {\n      if (event.code === \"Escape\") {\n        closeModal();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleESCClose);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleESCClose);\n    };\n  }, [closeModal]);\n\n  return (\n    <Backdrop\n      onClick={({ target, currentTarget }) => {\n        if (target === currentTarget) {\n          setShowSuccessModal(false);\n          document.body.style.overflow = \"visible\";\n          if (variant === \"create\") {\n            setShouldResetElements(true);\n          }\n        }\n      }}\n    >\n      <Modal>\n        <button\n          id=\"close\"\n          type=\"button\"\n          aria-label=\"Close modal\"\n          onClick={closeModal}\n        >\n          <svg width={48} height={48}>\n            <use href={`${sprite}#icon-close`}></use>\n          </svg>\n        </button>\n        <ModalTitle>{t(title)}</ModalTitle>\n        <ModalText>{t(text)}</ModalText>\n        <ModalPic width={177} height={177}>\n          <use href={`${sprite}#icon-success`}></use>\n        </ModalPic>\n\n        <ModalLink\n          to={\n            variant === \"apply\"\n              ? `/profile/responses${\n                  location?.pathname === \"/needHelp\" ? \"/need\" : \"/provide\"\n                }`\n              : \"/\"\n          }\n          state={{ from: location }}\n          className=\"accent-button\"\n          onClick={() => (document.body.style.overflow = \"visible\")}\n        >\n          {t(accentBtnText)}\n        </ModalLink>\n\n        {variant === \"apply\" && (\n          <ModalLink\n            to=\"/\"\n            className=\"secondary-button\"\n            state={{ from: location }}\n            onClick={() => (document.body.style.overflow = \"visible\")}\n          >\n            {t(\"createTask.successWindow.backHome\")}\n          </ModalLink>\n        )}\n      </Modal>\n    </Backdrop>\n  );\n};\n\nexport default SuccessModal;\n","const AddAttachmentIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"41\"\n      height=\"40\"\n      viewBox=\"0 0 41 40\"\n      fill=\"none\"\n    >\n      <g clipPath=\"url(#clip0_905_8098)\">\n        <path\n          d=\"M20.5 11.2266V29.0043\"\n          stroke=\"url(#paint0_angular_905_8098)\"\n          strokeWidth=\"4\"\n          strokeMiterlimit=\"10\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M11.7173 20.5391H29.4951\"\n          stroke=\"url(#paint1_angular_905_8098)\"\n          strokeWidth=\"4\"\n          strokeMiterlimit=\"10\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M31.6111 38.1152H9.38889C5.58235 38.1152 2.5 35.0329 2.5 31.2263V9.00412C2.5 5.19758 5.58235 2.11523 9.38889 2.11523H31.6111C35.4177 2.11523 38.5 5.19758 38.5 9.00412V31.2263C38.5 35.0329 35.4177 38.1152 31.6111 38.1152Z\"\n          stroke=\"url(#paint2_angular_905_8098)\"\n          strokeWidth=\"4\"\n          strokeMiterlimit=\"10\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </g>\n      <defs>\n        <radialGradient\n          id=\"paint0_angular_905_8098\"\n          cx=\"0\"\n          cy=\"0\"\n          r=\"1\"\n          gradientUnits=\"userSpaceOnUse\"\n          gradientTransform=\"translate(21.5 8.91546) rotate(-90.1851) scale(33.4224 2.0351)\"\n        >\n          <stop stopColor=\"#FFA502\" />\n          <stop offset=\"1\" stopColor=\"#C85120\" />\n        </radialGradient>\n        <radialGradient\n          id=\"paint1_angular_905_8098\"\n          cx=\"0\"\n          cy=\"0\"\n          r=\"1\"\n          gradientUnits=\"userSpaceOnUse\"\n          gradientTransform=\"translate(29.4951 20.4091) rotate(-135.603) scale(2.68715 25.3122)\"\n        >\n          <stop stopColor=\"#FFA502\" />\n          <stop offset=\"1\" stopColor=\"#C85120\" />\n        </radialGradient>\n        <radialGradient\n          id=\"paint2_angular_905_8098\"\n          cx=\"0\"\n          cy=\"0\"\n          r=\"1\"\n          gradientUnits=\"userSpaceOnUse\"\n          gradientTransform=\"translate(40.5 -5.08476) rotate(-93.2878) scale(75.324 81.2703)\"\n        >\n          <stop stopColor=\"#FFA502\" />\n          <stop offset=\"1\" stopColor=\"#C85120\" />\n        </radialGradient>\n        <clipPath id=\"clip0_905_8098\">\n          <rect\n            width=\"40\"\n            height=\"40\"\n            fill=\"white\"\n            transform=\"translate(0.5)\"\n          />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n};\n\nexport default AddAttachmentIcon;\n","import { useState, useEffect, useRef } from \"react\";\nimport { useSearchParams, useNavigate, useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFormik } from \"formik\";\nimport {\n  OFFER_TYPE,\n  REQUEST_TYPE,\n  MAX_IMAGES_QTY,\n  MAX_FILE_SIZE_BYTES,\n  MAX_TOTAL_SIZE_BYTES,\n} from \"constants\";\nimport { createTaskSchema } from \"schemas\";\nimport { sendNewTask, updateHelpRequest } from \"api/requests\";\nimport sprite from \"assets/icons/sprite.svg\";\nimport AddAttachmentIcon from \"assets/icons/AddAttachmentIcon\";\nimport SearchFiltersList from \"components/Tasks/SearchFiltersList\";\nimport SmallSpinner from \"components/Loaders/SmallSpinner\";\nimport SuccessModal from \"../../SuccessModal\";\nimport {\n  CreateForm,\n  TextAreaLabel,\n  TextArea,\n  AttachmentBlock,\n  PostBtn,\n  AttachmentList,\n  ErrorMsg,\n  MobTabPositioningWrap,\n  DeskPositioningWrap,\n  PositionWrap,\n  TextAreasWrap,\n  AttachmentBtnWrap,\n} from \"./CreateTaskForm.styled\";\n\nconst CreateTaskForm = ({\n  setCategoriesFilters,\n  setRegionsFilters,\n  categories,\n  region,\n  variant,\n}) => {\n  const [areCategoriesEmpty, setAreCategoriesEmpty] = useState(false);\n  const [isRegionEmpty, setIsRegionEmpty] = useState(false);\n  const [imagePreviews, setImagePreviews] = useState([]);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [isUploadedSizeExceed, setIsUploadedSizeExceed] = useState(false);\n  const [isQntyExceeded, setIsQntyExceded] = useState(false);\n  const [shouldResetElements, setShouldResetElements] = useState(false);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [showEditSuccessModal, setShowEditSuccessModal] = useState(false);\n  const [defaultValues, setDefaultValues] = useState(\n    () =>\n      JSON.parse(localStorage.getItem(\"updateDetails\")) ?? {\n        reqId: null,\n        reqType: null,\n        title: \"\",\n        description: \"\",\n        comment: \"\",\n        region: [],\n        categories: [],\n      }\n  );\n\n  const navigate = useNavigate();\n  const formRef = useRef(null);\n  const { t } = useTranslation();\n  const [urlParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (urlParams.get(\"reqId\") || defaultValues.title) {\n      setCategoriesFilters(defaultValues.categories);\n      setRegionsFilters(defaultValues.region);\n    } else {\n      localStorage.removeItem(\"updateDetails\");\n    }\n  }, [\n    defaultValues.title,\n    defaultValues.categories,\n    defaultValues.region,\n    setCategoriesFilters,\n    setRegionsFilters,\n    urlParams,\n  ]);\n\n  const onSubmit = async ({ title, description, comment }, actions) => {\n    const requestType = defaultValues.reqType\n      ? defaultValues.reqType\n      : variant === \"/needHelp\"\n      ? REQUEST_TYPE\n      : OFFER_TYPE;\n\n    const formData = {\n      title,\n      categoryIds: categories.map((string) => parseInt(string, 10)),\n      region: region[0],\n      description,\n      comment,\n      requestType,\n    };\n\n    const isFormDataValid = await createTaskSchema.isValid(formData);\n    if (!isFormDataValid) return;\n\n    if (defaultValues.reqId) {\n      await updateHelpRequest({\n        id: defaultValues.reqId,\n        body: formData,\n      });\n\n      setShowEditSuccessModal(true);\n      setDefaultValues({\n        reqId: null,\n        reqType: null,\n        title: \"\",\n        description: \"\",\n        comment: \"\",\n        region: [],\n        categories: [],\n      });\n      navigate(\"/profile/requests\");\n    } else {\n      await sendNewTask(formData, uploadedFiles);\n      setShowSuccessModal(true);\n      document.body.style.overflow = \"hidden\";\n      setShouldResetElements(false);\n    }\n\n    actions.resetForm();\n    setRegionsFilters([]);\n    setCategoriesFilters([]);\n\n    const { category, region: regs } = formRef?.current?.elements;\n    category.forEach((element) => (element.checked = false));\n    regs.forEach((reg) => (reg.checked = false));\n  };\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    const previews = [];\n\n    const reader = new FileReader();\n\n    if (file?.size > MAX_FILE_SIZE_BYTES) {\n      setIsUploadedSizeExceed(true);\n\n      setTimeout(() => setIsUploadedSizeExceed(false), 5000);\n      return;\n    }\n\n    reader.onload = (e) => {\n      const preview = e.target.result;\n      const totalSize = previews.reduce((acc, curr) => acc + curr.size, 0);\n\n      if (totalSize + file.size > MAX_TOTAL_SIZE_BYTES) {\n        return;\n      }\n\n      if (\n        previews.length >= MAX_IMAGES_QTY ||\n        imagePreviews.length >= MAX_IMAGES_QTY\n      ) {\n        setIsQntyExceded(true);\n        setTimeout(() => setIsQntyExceded(false), 5000);\n        return;\n      }\n\n      setIsUploadedSizeExceed(false);\n      setIsQntyExceded(false);\n      previews.push(file);\n      setImagePreviews((prev) => [...prev, preview]);\n      setUploadedFiles((prev) => [...prev, file]);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const handleDeleteImage = (prevStr) => {\n    if (!imagePreviews.length) {\n      setIsUploadedSizeExceed(false);\n      setIsQntyExceded(false);\n    }\n\n    setImagePreviews((prev) => prev.filter((img) => img !== prevStr));\n  };\n\n  const checkEmptyFields = () => {\n    if (!region.length) {\n      setIsRegionEmpty(true);\n    }\n    if (!categories.length) {\n      setAreCategoriesEmpty(true);\n    }\n  };\n\n  const CREATE_TASK_INIT_VALUES = {\n    title: defaultValues.title,\n    description: defaultValues.description,\n    comment: defaultValues.comment,\n  };\n\n  const { errors, touched, getFieldProps, handleSubmit, isSubmitting } =\n    useFormik({\n      initialValues: CREATE_TASK_INIT_VALUES,\n      validationSchema: createTaskSchema,\n      onSubmit,\n    });\n\n  return (\n    <>\n      <CreateForm ref={formRef} onSubmit={handleSubmit}>\n        <MobTabPositioningWrap>\n          <TextAreaLabel>\n            {t(\"createTask.name\")}\n            <TextArea\n              id=\"name\"\n              name=\"title\"\n              placeholder={t(\"createTask.placeholder\")}\n              maxLength={300}\n              {...getFieldProps(\"title\")}\n              className={errors.title && touched.title && \"invalid\"}\n            ></TextArea>\n            {errors.title && touched.title && (\n              <ErrorMsg>{t(errors.title)}</ErrorMsg>\n            )}\n          </TextAreaLabel>\n        </MobTabPositioningWrap>\n\n        <SearchFiltersList\n          showMore={false}\n          isUpdating={defaultValues.reqId}\n          variant=\"createTask\"\n          setCategoriesFilters={setCategoriesFilters}\n          setRegionsFilters={setRegionsFilters}\n          areCategoriesEmpty={areCategoriesEmpty}\n          isRegionEmpty={isRegionEmpty}\n          setAreCategoriesEmpty={setAreCategoriesEmpty}\n          setIsRegionEmpty={setIsRegionEmpty}\n          defaultCheckedCategories={defaultValues.categories}\n          defaultCheckedRegions={defaultValues.region}\n          shouldResetElements={shouldResetElements}\n        />\n\n        <PositionWrap>\n          <TextAreasWrap>\n            <DeskPositioningWrap>\n              <TextAreaLabel>\n                {t(\"createTask.name\")}\n                <TextArea\n                  id=\"name\"\n                  name=\"title\"\n                  placeholder={t(\"createTask.placeholder\")}\n                  maxLength={100}\n                  {...getFieldProps(\"title\")}\n                  className={errors.title && touched.title && \"invalid\"}\n                ></TextArea>\n                {errors.title && touched.title && (\n                  <ErrorMsg>{t(errors.title)}</ErrorMsg>\n                )}\n              </TextAreaLabel>\n            </DeskPositioningWrap>\n\n            <TextAreaLabel>\n              {t(\"createTask.descr\")}\n              <TextArea\n                name=\"description\"\n                placeholder={t(\"createTask.placeholder\")}\n                maxLength={9000}\n                {...getFieldProps(\"description\")}\n                className={\n                  errors.description && touched.description && \"invalid\"\n                }\n              ></TextArea>\n              {errors.description && touched.description && (\n                <ErrorMsg>{t(errors.description)}</ErrorMsg>\n              )}\n            </TextAreaLabel>\n\n            <TextAreaLabel>\n              {t(\"createTask.additional\")}\n              <TextArea\n                name=\"comment\"\n                maxLength={9000}\n                placeholder={t(\"createTask.placeholder\")}\n                {...getFieldProps(\"comment\")}\n              ></TextArea>\n              {errors.comment && touched.comment && (\n                <ErrorMsg>{t(errors.comment)}</ErrorMsg>\n              )}\n            </TextAreaLabel>\n          </TextAreasWrap>\n\n          <AttachmentBtnWrap>\n            {isUploadedSizeExceed && (\n              <p className=\"upload-error\">\n                {t(\"createTask.validation.fileMaxSize\")}\n              </p>\n            )}\n            {isQntyExceeded && (\n              <p className=\"upload-error\">\n                {t(\"createTask.validation.maxQnty\")}\n              </p>\n            )}\n            <AttachmentBlock\n              className={\n                isUploadedSizeExceed || isQntyExceeded ? \"invalid\" : \"\"\n              }\n            >\n              <label\n                className={\n                  imagePreviews.length >= MAX_IMAGES_QTY ? \"disabled\" : \"\"\n                }\n              >\n                <p> {t(\"createTask.addPic\")}</p>\n                <AddAttachmentIcon />\n                <input\n                  type=\"file\"\n                  name=\"attachment\"\n                  accept=\".jpg, .jpeg, .png\"\n                  onChange={handleImageChange}\n                  disabled={imagePreviews.length >= MAX_IMAGES_QTY}\n                />\n              </label>\n              <AttachmentList>\n                {imagePreviews.map((preview, index) => (\n                  <li key={index}>\n                    <div>\n                      <img src={preview} alt=\"Preview of uploaded file\" />\n                      <button\n                        type=\"button\"\n                        aria-label=\"Delete image\"\n                        onClick={() => handleDeleteImage(preview)}\n                      >\n                        <svg width={16} height={16}>\n                          <use href={`${sprite}#icon-delete-image`}></use>\n                        </svg>\n                      </button>\n                    </div>\n                  </li>\n                ))}\n              </AttachmentList>\n            </AttachmentBlock>\n\n            <div onClick={checkEmptyFields}>\n              <PostBtn\n                type=\"submit\"\n                className=\"accent-button\"\n                disabled={\n                  isSubmitting ||\n                  Object.keys(errors)?.length > 0 ||\n                  region?.length <= 0 ||\n                  categories?.length <= 0\n                }\n              >\n                {isSubmitting ? (\n                  <SmallSpinner width={20} height={20} />\n                ) : (\n                  t(\"createTask.post\")\n                )}\n              </PostBtn>\n            </div>\n          </AttachmentBtnWrap>\n        </PositionWrap>\n      </CreateForm>\n\n      {showSuccessModal && (\n        <SuccessModal\n          variant=\"create\"\n          title={\"createTask.successWindow.congrat\"}\n          text={\n            location?.state?.from\n              ? location?.state?.from?.pathname === \"/needHelp\"\n                ? \"createTask.successWindow.textCreateRequest\"\n                : \"createTask.successWindow.textCreateOffer\"\n              : \"createTask.successWindow.textCreate\"\n          }\n          accentBtnText={\"createTask.successWindow.backHome\"}\n          setShowSuccessModal={setShowSuccessModal}\n          setShouldResetElements={setShouldResetElements}\n        />\n      )}\n\n      {showEditSuccessModal && (\n        <SuccessModal\n          variant=\"update\"\n          title={\"createTask.successWindow.sent\"}\n          text={\"createTask.successWindow.updatedText\"}\n          accentBtnText={\"createTask.successWindow.backHome\"}\n          setShowSuccessModal={setShowEditSuccessModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CreateTaskForm;\n","import { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { MainContainer } from \"layouts/MainContainer.styled\";\nimport BackHomeBtn from \"components/Auth/BackHomeBtn\";\nimport { TasksSection, TasksTitle } from \"../Tasks.styled\";\nimport CreateTaskForm from \"components/Tasks/CreateTask/CreateTaskForm\";\n\nconst CreateTask = () => {\n  const [categoriesSearch, setCategoriesSearch] = useState([]);\n  const [regionsSearch, setRegionsSearch] = useState([]);\n\n  const { t } = useTranslation();\n  const location = useLocation();\n\n  return (\n    <TasksSection>\n      <MainContainer>\n        <BackHomeBtn\n          variant=\"tasks\"\n          to={location?.state?.from}\n          text=\"createTask.goToSearch\"\n        />\n\n        <TasksTitle>\n          {location?.state?.from?.pathname === \"/needHelp\"\n            ? t(\"createTask.titleRequest\")\n            : t(\"createTask.titleOffer\")}\n        </TasksTitle>\n        <CreateTaskForm\n          setCategoriesFilters={setCategoriesSearch}\n          setRegionsFilters={setRegionsSearch}\n          categories={categoriesSearch}\n          region={regionsSearch}\n          variant={location?.state?.from?.pathname}\n        />\n      </MainContainer>\n    </TasksSection>\n  );\n};\n\nexport default CreateTask;\n","import { useEffect } from \"react\";\nimport CreateTask from \"components/Tasks/CreateTask\";\n\nconst CreateTaskPage = () => {\n  useEffect(() => {\n    localStorage.setItem(\"location\", \"/createTask\");\n  }, []);\n\n  return <CreateTask />;\n};\n\nexport default CreateTaskPage;\n","import * as Yup from \"yup\";\n\nconst changeSchema = Yup.object({\n  firstName: Yup.string()\n    .min(2, \"validation.name.min\")\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]+$/,\n      \"validation.name.matches\"\n    )\n    .required(\"validation.required\"),\n  lastName: Yup.string()\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]*$/,\n      \"validation.name.matches\"\n    )\n    .min(2, \"validation.name.min\")\n    .nullable(),\n  phoneNumber: Yup.string()\n    .matches(/^\\+380\\d{9}$/, \"validation.phone.invalid\")\n    .required(\"validation.required\"),\n  region: Yup.string()\n    .max(50, \"validation.reg.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]+$/,\n      \"validation.reg.matches\"\n    )\n    .nullable(),\n  organization: Yup.string().max(200, \"validation.organization.max\").nullable(),\n  comment: Yup.string().max(500, \"validation.about.max\").nullable(),\n});\n\nexport default changeSchema;\n","import * as Yup from \"yup\";\n\nconst registerSchema = Yup.object({\n  firstName: Yup.string()\n    .min(2, \"validation.name.min\")\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]+$/,\n      \"validation.name.matches\"\n    )\n    .required(\"validation.required\"),\n  lastName: Yup.string()\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]*$/,\n      \"validation.name.matches\"\n    )\n    .min(2, \"validation.name.min\")\n    .nullable(),\n  phoneNumber: Yup.string()\n    .matches(/^\\+380\\d{9}$/, \"validation.phone.invalid\")\n    .required(\"validation.required\"),\n  email: Yup.string()\n    .email(\"validation.email.invalid\")\n    .matches(\n      /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n      \"validation.email.invalid\"\n    )\n    .required(\"validation.required\"),\n  password: Yup.string()\n    .min(8, \"validation.password.length\")\n    .max(100, \"validation.password.length\")\n    .matches(/[A-Z]/, \"validation.password.uppercase\")\n    .matches(/[a-z]/, \"validation.password.lowercase\")\n    .matches(/[0-9]/, \"validation.password.digit\")\n    .matches(/^[a-zA-Z0-9]+$/, \"validation.password.specialSym\")\n    .required(\"validation.required\"),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\")], \"validation.password.confirm\")\n    .required(\"validation.required\"),\n  agreement: Yup.boolean().oneOf([true]).required(),\n});\n\nexport default registerSchema;\n","import * as Yup from \"yup\";\n\nconst emailSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"validation.email.invalid\")\n    .matches(\n      /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n      \"validation.email.invalid\"\n    )\n\n    .required(\"validation.required\"),\n});\n\nexport default emailSchema;\n","import * as Yup from \"yup\";\n\nconst passwordSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(8, \"validation.password.length\")\n    .max(100, \"validation.password.length\")\n    .matches(/[A-Z]/, \"validation.password.uppercase\")\n    .matches(/[a-z]/, \"validation.password.lowercase\")\n    .matches(/[0-9]/, \"validation.password.digit\")\n    .matches(/^[a-zA-Z0-9]+$/, \"validation.password.specialSym\")\n    .required(\"validation.required\"),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\")], \"validation.password.confirm\")\n    .required(\"validation.required\"),\n});\n\nexport default passwordSchema;\n","import * as Yup from \"yup\";\n\nconst createTaskSchema = Yup.object({\n  title: Yup.string()\n    .min(5, \"createTask.validation.titleMin\")\n    .max(100, \"createTask.validation.titleMax\")\n    .required(\"createTask.validation.enterData\"),\n  description: Yup.string()\n    .min(40, \"createTask.validation.descrMin\")\n    .max(9000)\n    .required(\"createTask.validation.enterData\"),\n  comment: Yup.string().max(9000),\n});\n\nexport default createTaskSchema;\n","import * as Yup from \"yup\";\n\nconst confirmApplicationSchema = Yup.object({\n  firstName: Yup.string()\n    .min(2, \"validation.name.min\")\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]+$/,\n      \"validation.name.matches\"\n    )\n    .required(\"validation.required\"),\n  lastName: Yup.string()\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]*$/,\n      \"validation.name.matches\"\n    )\n    .min(2, \"validation.name.min\")\n    .nullable(),\n  phoneNumber: Yup.string()\n    .matches(/^\\+380\\d{9}$/, \"validation.phone.invalid\")\n    .required(\"validation.required\"),\n  region: Yup.string().required(\"validation.required\"),\n  comment: Yup.string().max(9000),\n  agreement: Yup.boolean().oneOf([true]).required(),\n});\n\nexport default confirmApplicationSchema;\n","import * as Yup from \"yup\";\n\nconst changePasswordSchema = Yup.object().shape({\n  oldPassword: Yup.string().required(\"validation.required\"),\n  newPassword: Yup.string()\n    .min(8, \"validation.password.length\")\n    .max(100, \"validation.password.length\")\n    .matches(/[A-Z]/, \"validation.password.uppercase\")\n    .matches(/[a-z]/, \"validation.password.lowercase\")\n    .matches(/[0-9]/, \"validation.password.digit\")\n    .matches(/^[a-zA-Z0-9]+$/, \"validation.password.specialSym\")\n    .required(\"validation.required\"),\n  repeatNewPassword: Yup.string()\n    .oneOf([Yup.ref(\"newPassword\")], \"validation.password.confirm\")\n    .required(\"validation.required\"),\n});\n\nexport default changePasswordSchema;\n"],"names":["_ref","width","height","color","_jsx","TailSpin","visible","ariaLabel","radius","backdropStyles","css","_templateObject","_taggedTemplateLiteral","Backdrop","styled","div","_templateObject2","Modal","_templateObject3","ModalTitle","h4","_templateObject4","ModalText","p","_templateObject5","ModalPic","svg","_templateObject6","ModalLink","Link","_templateObject7","gradientTextHover","variant","setShowSuccessModal","title","text","accentBtnText","setShouldResetElements","location","useLocation","t","useTranslation","closeModal","document","body","style","overflow","useEffect","handleESCClose","event","code","addEventListener","removeEventListener","onClick","_ref2","target","currentTarget","children","_jsxs","id","type","href","concat","sprite","to","pathname","state","from","className","AddAttachmentIcon","xmlns","viewBox","fill","clipPath","d","stroke","strokeWidth","strokeMiterlimit","strokeLinecap","strokeLinejoin","cx","cy","r","gradientUnits","gradientTransform","stopColor","offset","transform","_Object$keys","_location$state","_location$state2","_location$state2$from","setCategoriesFilters","setRegionsFilters","categories","region","areCategoriesEmpty","setAreCategoriesEmpty","useState","isRegionEmpty","setIsRegionEmpty","imagePreviews","setImagePreviews","uploadedFiles","setUploadedFiles","isUploadedSizeExceed","setIsUploadedSizeExceed","isQntyExceeded","setIsQntyExceded","shouldResetElements","showSuccessModal","showEditSuccessModal","setShowEditSuccessModal","defaultValues","setDefaultValues","_JSON$parse","JSON","parse","localStorage","getItem","reqId","reqType","description","comment","navigate","useNavigate","formRef","useRef","urlParams","useSearchParams","get","removeItem","CREATE_TASK_INIT_VALUES","errors","touched","getFieldProps","handleSubmit","isSubmitting","useFormik","initialValues","validationSchema","createTaskSchema","onSubmit","async","actions","_formRef$current","requestType","REQUEST_TYPE","OFFER_TYPE","formData","categoryIds","map","string","parseInt","isValid","updateHelpRequest","sendNewTask","resetForm","category","regs","current","elements","forEach","element","checked","reg","_Fragment","CreateForm","ref","MobTabPositioningWrap","TextAreaLabel","TextArea","name","placeholder","maxLength","ErrorMsg","SearchFiltersList","showMore","isUpdating","defaultCheckedCategories","defaultCheckedRegions","PositionWrap","TextAreasWrap","DeskPositioningWrap","AttachmentBtnWrap","AttachmentBlock","length","MAX_IMAGES_QTY","accept","onChange","file","files","previews","reader","FileReader","size","MAX_FILE_SIZE_BYTES","setTimeout","onload","e","preview","result","reduce","acc","curr","MAX_TOTAL_SIZE_BYTES","push","prev","readAsDataURL","disabled","AttachmentList","index","src","alt","handleDeleteImage","prevStr","filter","img","checkEmptyFields","PostBtn","Object","keys","SmallSpinner","SuccessModal","CreateTask","_location$state3","_location$state3$from","categoriesSearch","setCategoriesSearch","regionsSearch","setRegionsSearch","TasksSection","MainContainer","BackHomeBtn","TasksTitle","CreateTaskForm","CreateTaskPage","setItem","Yup","firstName","min","max","matches","required","lastName","nullable","phoneNumber","organization","email","password","repeatPassword","oneOf","agreement","shape","oldPassword","newPassword","repeatNewPassword"],"sourceRoot":""}