{"version":3,"file":"static/js/144.8408f6d6.chunk.js","mappings":"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","sources":["components/Notification/Notification.styled.jsx","assets/icons/RightArrow.jsx","components/Notification/Notification.jsx","api/notifications/index.js","components/Profile/NotificationsSubPage/NotificationsSubPage.styled.jsx","components/Profile/NotificationsSubPage/NotificationsSubPage.jsx","pages/NotificationsPage.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { gradientTextHover } from \"../Tasks/Tasks.styled\";\n\nexport const NotificationItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n  margin: 0 auto;\n  min-height: 50px;\n  width: 100%;\n  max-width: 400px;\n\n  @media screen and (min-width: 768px) {\n    width: 500px;\n    max-width: unset;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 659px;\n  }\n\n  @media screen and (min-width: 1920px) {\n    width: 800px;\n  }\n`;\n\nexport const NotificationBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  min-width: 100%;\n  border-radius: 8px 0px 8px 8px;\n  padding: 10px;\n  background: rgba(193, 215, 203, 0.1);\n  box-shadow: 0px -1px 4px 0px rgba(119, 139, 158, 0.2) inset,\n    0px 1px 4px 0px rgba(119, 139, 158, 0.2) inset;\n  backdrop-filter: blur(10px);\n\n  ${({ $variant }) =>\n    $variant === \"all\" && \"max-width: 370px; padding-bottom: 14px;\"}\n  ${({ $variant }) =>\n    $variant === \"support\" && \"max-width: 450px;padding-top: 12px;\"}\n\n\n  &.info {\n    background: rgba(193, 215, 203, 0.2);\n    box-shadow: 0px -1px 4px 0px rgba(105, 149, 234, 0.3) inset,\n      0px 1px 4px 0px rgba(105, 149, 234, 0.3) inset;\n  }\n\n  &.error {\n    background: ${({ $variant }) =>\n      `rgba(193, 215, 203, ${$variant === \"auth\" ? \"0.5\" : \"0.1\"})`};\n    box-shadow: 0px -1px 4px 0px rgba(215, 49, 49, 0.15) inset,\n      0px 1px 4px 0px rgba(215, 49, 49, 0.15) inset;\n  }\n\n  &.waiting {\n    box-shadow: 0px -1px 4px 0px rgba(90, 119, 54, 0.3) inset,\n      0px 1px 4px 0px rgba(90, 119, 54, 0.3) inset;\n  }\n\n  &.reminder {\n    box-shadow: 0px -1px 4px 0px rgba(105, 149, 234, 0.3) inset,\n      0px 1px 4px 0px rgba(105, 149, 234, 0.3) inset;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n  }\n\n  p {\n    font-family: Nunito;\n    font-size: 16px;\n    color: #0b1c24;\n    margin-top: 8px;\n    /* text-overflow: ellipsis; */\n    /* overflow: hidden;\n     */\n    word-wrap: break-word;\n  }\n\n  svg {\n    stroke: #204250;\n\n    &.info {\n      stroke: #246e8c;\n    }\n\n    &.error {\n      stroke: #fe4747;\n      margin-top: -3px;\n    }\n\n    &.waiting {\n      stroke: #5a7736;\n    }\n\n    &.reminder {\n      stroke: #ed861e;\n    }\n  }\n\n  h4 {\n    color: #204250;\n\n    &.info {\n      color: #246e8c;\n    }\n\n    &.error {\n      color: #fe4747;\n    }\n\n    &.waiting {\n      color: #5a7736;\n    }\n\n    &.reminder {\n      color: #ed861e;\n    }\n  }\n\n  .close-notification-btn {\n    position: absolute;\n    top: 13px;\n    right: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    #close-notification {\n      fill: #000;\n      stroke: none;\n      margin-top: 0;\n      transition: fill 150ms linear;\n    }\n\n    &:hover #close-notification,\n    &:focus #close-notification {\n      &.info {\n        fill: #246e8c;\n      }\n\n      &.error {\n        fill: #fe4747;\n      }\n\n      &.waiting {\n        fill: #5a7736;\n      }\n    }\n  }\n`;\n\nexport const TimeBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  gap: 8px;\n  margin-bottom: 8px;\n\n  p,\n  time {\n    font-family: Nunito;\n    font-size: 14px;\n  }\n`;\n\nexport const MoreDetailsLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  gap: 6px;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1;\n  margin-top: 12px;\n  padding-right: 5px;\n  background: conic-gradient(\n    from -3deg at 100% -13%,\n    #ffa502 0deg,\n    #c85120 360deg\n  );\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  ${gradientTextHover}\n\n  @media screen and (min-width: 1440px) {\n    font-size: 18px;\n  }\n`;\n\nexport const AssistanceBtnsBlock = styled.div`\n  display: flex;\n  height: 40px;\n  margin-top: 26px;\n\n  button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 16px;\n    font-weight: 600;\n    line-height: normal;\n    padding: 12px 24px;\n\n    @media screen and (min-width: 768px) {\n      font-size: 18px;\n    }\n  }\n\n  .assistance-provided {\n    color: #fff;\n    border-radius: 12px 0px 0px 12px;\n    margin-right: -10px;\n    height: 40px;\n  }\n\n  .assistance-not-provided {\n    color: #707aa7;\n    border-radius: 0px 12px 12px 0px;\n    border: 2px solid #c2ced8;\n    height: 40px;\n    transition: border-color 150ms linear, background-color 150ms linear;\n\n    @media screen and (min-width: 768px) {\n      font-size: 18px;\n    }\n\n    &:hover,\n    &:focus {\n      border-color: #707aa7;\n    }\n\n    &:active {\n      border-color: #c2ced8;\n      background-color: #c2ced8;\n    }\n  }\n`;\n","const RightArrow = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"8\"\n      height=\"14\"\n      viewBox=\"0 0 8 14\"\n      fill=\"none\"\n    >\n      <path\n        d=\"M1 13L6.61911 7.855C7.12696 7.39 7.12696 6.625 6.61911 6.16L1 1\"\n        stroke=\"url(#paint0_angular_3002_16128)\"\n        strokeWidth=\"2\"\n        strokeMiterlimit=\"10\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <defs>\n        <radialGradient\n          id=\"paint0_angular_3002_16128\"\n          cx=\"0\"\n          cy=\"0\"\n          r=\"1\"\n          gradientUnits=\"userSpaceOnUse\"\n          gradientTransform=\"translate(0.220002 1) rotate(173.446) scale(11.3542 24.2617)\"\n        >\n          <stop stopColor=\"#FFA502\" />\n          <stop offset=\"1\" stopColor=\"#C85120\" />\n        </radialGradient>\n      </defs>\n    </svg>\n  );\n};\n\nexport default RightArrow;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { setNotificationAsRead } from \"api/notifications\";\nimport { REQUEST_TYPE } from \"constants\";\nimport { formatDate, formatTime } from \"helpers\";\nimport sprite from \"assets/icons/sprite.svg\";\nimport RightArrow from \"assets/icons/RightArrow\";\nimport {\n  MoreDetailsLink,\n  NotificationBlock,\n  TimeBlock,\n} from \"./Notification.styled\";\n\nconst Notification = ({\n  closeToaster,\n  iconId,\n  className,\n  title,\n  text,\n  variant,\n  showDetails,\n  time,\n  data = {},\n  unreadIds = [],\n}) => {\n  const location = useLocation();\n  const { t, i18n } = useTranslation();\n  const isLanguageUK = i18n.language === \"uk\";\n  const {\n    id,\n    createdAt,\n    helpRequestType,\n    isRead,\n    notificationText: {\n      notificationTextEn,\n      notificationTextUa,\n      notificationTitleEn,\n      notificationTitleUa,\n    },\n  } = data;\n\n  useEffect(() => {\n    const makeNotificationRead = async (id) => {\n      await setNotificationAsRead(id);\n    };\n\n    if (unreadIds.length > 0) {\n      unreadIds.forEach(async (elId) => {\n        const element = id === Number(elId);\n\n        if (element && !isRead) {\n          await makeNotificationRead(id);\n        }\n      });\n    }\n  }, [unreadIds, data, id, isRead]);\n\n  return (\n    <>\n      {time && (\n        <TimeBlock>\n          <p>{formatDate(createdAt)}</p>\n          <time>{formatTime(createdAt)}</time>\n        </TimeBlock>\n      )}\n      <NotificationBlock className={className} $variant={variant}>\n        {closeToaster && (\n          <button\n            className=\"close-notification-btn\"\n            type=\"button\"\n            onClick={closeToaster}\n          >\n            <svg\n              id=\"close-notification\"\n              width={20}\n              height={20}\n              className={className}\n            >\n              <use href={`${sprite}#icon-close`}></use>\n            </svg>\n          </button>\n        )}\n        <div>\n          <svg width={24} height={24} className={className}>\n            <use href={`${sprite}#icon-${iconId}`}></use>\n          </svg>\n          <h4 className={className}>\n            {data\n              ? isLanguageUK\n                ? notificationTitleUa\n                : notificationTitleEn\n              : t(title)}\n          </h4>\n        </div>\n        {data ? (\n          <p>{isLanguageUK ? notificationTextUa : notificationTextEn}</p>\n        ) : (\n          <p>{t(text)}</p>\n        )}\n        {showDetails && (\n          <MoreDetailsLink\n            state={{ from: location }}\n            to={\n              helpRequestType === REQUEST_TYPE\n                ? notificationTextUa.includes(\"Мої відгуки\")\n                  ? \"/profile/responses/provide\"\n                  : \"/profile/requests/need\"\n                : \"/profile/requests/provide\"\n            }\n          >\n            {t(\"profile.notifications.detailsBtn\")}\n            <RightArrow />\n          </MoreDetailsLink>\n        )}\n      </NotificationBlock>\n    </>\n  );\n};\n\nexport default Notification;\n","import { axiosInstance, ENDPOINTS } from \"../index\";\n\nexport const setNotificationAsRead = async (id) => {\n  try {\n    const { data } = await axiosInstance.patch(\n      ENDPOINTS.notifications.setAsRead(id)\n    );\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const deleteNotification = async (id) => {\n  try {\n    const { data } = await axiosInstance.delete(\n      ENDPOINTS.notifications.setAsRead(id)\n    );\n    return data;\n  } catch (error) {\n    return error;\n  }\n};\n","import styled from \"styled-components\";\n\nexport const NotificationsSection = styled.section`\n  padding: 54px 0 90px 0;\n  margin: 0 auto;\n\n  @media screen and (min-width: 1440px) {\n    padding: 10px 0 30px 0;\n  }\n`;\n\nexport const NotificationsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 16px;\n`;\n","import { useState, useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { getAllNotificationsThunk } from \"../../../redux/notifications/notificationOperations\";\nimport { selectAllNotifications } from \"../../../redux/notifications/notificationSelectors\";\nimport { MainContainer } from \"layouts/MainContainer.styled\";\nimport { PersonalInfoText } from \"../MyPersonalInfo/MyPersonalInfo.styled\";\nimport { ProfileH2 } from \"../MyProfile/MyProfile.styled\";\nimport ProfileHeader from \"../ProfileHeader/ProfileHeader\";\nimport ProfileNavigation from \"../ProfileNavigation/ProfileNavigation\";\nimport Notification from \"components/Notification\";\nimport {\n  DesktopWrap,\n  MobTabWrap,\n  ProfileScrollContainer,\n  SubPagesSection,\n} from \"../Tabs/MyTasks/MyTasks.styled\";\nimport { ScrollWrap } from \"../Tabs/MyTasks/MyResponses/MyResponses.styled\";\nimport {\n  NotificationsList,\n  NotificationsSection,\n} from \"./NotificationsSubPage.styled\";\nimport { NotificationItem } from \"components/Notification/Notification.styled\";\n\nconst NotificationsSubPage = () => {\n  const [isNotificationDeleted, setIsNotificationDeleted] = useState(false);\n  const [unreadIds, setUnreadIds] = useState([]);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const location = useLocation();\n  const scrollWrapRef = useRef();\n\n  useEffect(() => {\n    dispatch(getAllNotificationsThunk());\n    setIsNotificationDeleted(false);\n  }, [dispatch, isNotificationDeleted]);\n\n  const handleScroll = () => {\n    const container = document.getElementById(\"scrollContainer\");\n    const elements = container.getElementsByClassName(\"notification-item\");\n\n    for (let el of elements) {\n      const rect = el.getBoundingClientRect();\n      if (rect.top >= 0 && rect.bottom <= window.innerHeight) {\n        setUnreadIds((prev) => {\n          if (!prev.includes(el.dataset.id)) {\n            return [...prev, el.dataset.id];\n          }\n          return prev;\n        });\n      }\n    }\n  };\n\n  const throttle = (callback, delay) => {\n    let lastCall = 0;\n    return function (...args) {\n      const now = new Date().getTime();\n      if (now - lastCall < delay) {\n        return;\n      }\n      lastCall = now;\n      callback(...args);\n    };\n  };\n\n  useEffect(() => {\n    handleScroll();\n  }, []);\n\n  useEffect(() => {\n    const throttledScroll = throttle(handleScroll, 500);\n    scrollWrapRef.current.addEventListener(\"scroll\", throttledScroll);\n    return () =>\n      // eslint-disable-next-line\n      scrollWrapRef?.current?.removeEventListener(\"scroll\", throttledScroll);\n  }, []);\n\n  useEffect(() => {\n    const throttledScroll = throttle(handleScroll, 500);\n    window.addEventListener(\"scroll\", throttledScroll);\n    return () => window.removeEventListener(\"scroll\", throttledScroll);\n  }, []);\n\n  const notifications = useSelector(selectAllNotifications);\n\n  return (\n    <>\n      <DesktopWrap>\n        <ProfileHeader classN=\"other\" />\n        <ProfileH2>{t(\"profile.myProfile\")}</ProfileH2>\n        <PersonalInfoText>\n          {t(`profile.nav.${location?.pathname.split(\"/\")[2]}`)}\n        </PersonalInfoText>\n      </DesktopWrap>\n      <SubPagesSection>\n        <ProfileScrollContainer>\n          <MobTabWrap>\n            <ProfileNavigation />\n          </MobTabWrap>\n          <ScrollWrap\n            ref={scrollWrapRef}\n            id=\"scrollContainer\"\n            $variant=\"notifications\"\n          >\n            <NotificationsSection>\n              <MainContainer>\n                <NotificationsList>\n                  {notifications?.length > 0 &&\n                    notifications?.map((element) => (\n                      <NotificationItem\n                        key={element.id}\n                        data-id={element.id}\n                        className=\"notification-item\"\n                      >\n                        <Notification\n                          data={element}\n                          time\n                          showDetails\n                          variant=\"all\"\n                          unreadIds={unreadIds}\n                          className={element.type.toLowerCase()}\n                          setIsNotificationDeleted={setIsNotificationDeleted}\n                          iconId={\n                            element.type.toLowerCase() === \"reminder\"\n                              ? \"info\"\n                              : element.type.toLowerCase()\n                          }\n                        />\n                      </NotificationItem>\n                    ))}\n                </NotificationsList>\n              </MainContainer>\n            </NotificationsSection>\n          </ScrollWrap>\n        </ProfileScrollContainer>\n      </SubPagesSection>\n    </>\n  );\n};\n\nexport default NotificationsSubPage;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport NotificationsSubPage from \"components/Profile/NotificationsSubPage\";\n\nconst NotificationsPage = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    localStorage.setItem(\"location\", location?.pathname);\n  }, [location?.pathname]);\n\n  return <NotificationsSubPage />;\n};\n\nexport default NotificationsPage;\n"],"names":["NotificationItem","styled","li","_templateObject","_taggedTemplateLiteral","NotificationBlock","div","_templateObject2","_ref","$variant","_ref2","_ref3","concat","TimeBlock","_templateObject3","MoreDetailsLink","Link","_templateObject4","gradientTextHover","_templateObject5","RightArrow","_jsxs","xmlns","width","height","viewBox","fill","children","_jsx","d","stroke","strokeWidth","strokeMiterlimit","strokeLinecap","strokeLinejoin","id","cx","cy","r","gradientUnits","gradientTransform","stopColor","offset","closeToaster","iconId","className","title","text","variant","showDetails","time","data","unreadIds","location","useLocation","t","i18n","useTranslation","isLanguageUK","language","createdAt","helpRequestType","isRead","notificationText","notificationTextEn","notificationTextUa","notificationTitleEn","notificationTitleUa","useEffect","makeNotificationRead","async","axiosInstance","patch","ENDPOINTS","notifications","setAsRead","error","setNotificationAsRead","length","forEach","Number","elId","_Fragment","formatDate","formatTime","type","onClick","href","sprite","state","from","to","REQUEST_TYPE","includes","NotificationsSection","section","NotificationsList","ul","NotificationsSubPage","isNotificationDeleted","setIsNotificationDeleted","useState","setUnreadIds","dispatch","useDispatch","scrollWrapRef","useRef","getAllNotificationsThunk","handleScroll","elements","document","getElementById","getElementsByClassName","el","rect","getBoundingClientRect","top","bottom","window","innerHeight","prev","dataset","throttle","callback","delay","lastCall","now","Date","getTime","arguments","throttledScroll","current","addEventListener","_scrollWrapRef$curren","removeEventListener","useSelector","selectAllNotifications","DesktopWrap","ProfileHeader","classN","ProfileH2","PersonalInfoText","pathname","split","SubPagesSection","ProfileScrollContainer","MobTabWrap","ProfileNavigation","ScrollWrap","ref","MainContainer","map","element","Notification","toLowerCase","NotificationsPage","localStorage","setItem"],"sourceRoot":""}