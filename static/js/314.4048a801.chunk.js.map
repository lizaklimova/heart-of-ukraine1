{"version":3,"file":"static/js/314.4048a801.chunk.js","mappings":"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","sources":["components/Profile/NotificationsSubPage/NotificationsSubPage.styled.jsx","components/Profile/NotificationsSubPage/NotificationsSubPage.jsx","components/Profile/ProfileInfo/ProfileInfo.styled.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/SupportSubPage/SupportSubPage.styled.jsx","components/Profile/SupportSubPage/SupportSubPage.jsx","components/Profile/Profile.styled.jsx","components/Profile/ProfileInfoSubPage/ProfileInfoSubPage.jsx","components/Profile/ChangeInfoSubPage/ChangeInfoSubPage.jsx","pages/ProfileSubPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const NotificationsSection = styled.section`\n  padding: 54px 0 90px 0;\n  margin: 0 auto;\n\n  @media screen and (min-width: 1440px) {\n    padding: 10px 0 30px 0;\n  }\n`;\n\nexport const NotificationsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 16px;\n`;\n","import { useState, useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { getAllNotificationsThunk } from \"../../../redux/notifications/notificationOperations\";\nimport { selectAllNotifications } from \"../../../redux/notifications/notificationSelectors\";\nimport { MainContainer } from \"layouts/MainContainer.styled\";\nimport { PersonalInfoText } from \"../MyPersonalInfo/MyPersonalInfo.styled\";\nimport { ProfileH2 } from \"../MyProfile/MyProfile.styled\";\nimport ProfileHeader from \"../ProfileHeader/ProfileHeader\";\nimport ProfileNavigation from \"../ProfileNavigation/ProfileNavigation\";\nimport Notification from \"components/Notification\";\nimport {\n  DesktopWrap,\n  MobTabWrap,\n  ProfileScrollContainer,\n  SubPagesSection,\n} from \"../Tabs/MyTasks/MyTasks.styled\";\nimport { ScrollWrap } from \"../Tabs/MyTasks/MyResponses/MyResponses.styled\";\nimport {\n  NotificationsList,\n  NotificationsSection,\n} from \"./NotificationsSubPage.styled\";\nimport { NotificationItem } from \"components/Notification/Notification.styled\";\n\nconst NotificationsSubPage = () => {\n  const [isNotificationDeleted, setIsNotificationDeleted] = useState(false);\n  const [unreadIds, setUnreadIds] = useState([]);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const location = useLocation();\n  const scrollWrapRef = useRef();\n\n  useEffect(() => {\n    dispatch(getAllNotificationsThunk());\n    setIsNotificationDeleted(false);\n  }, [dispatch, isNotificationDeleted]);\n\n  const handleScroll = () => {\n    const container = document.getElementById(\"scrollContainer\");\n    const elements = container.getElementsByClassName(\"notification-item\");\n\n    for (let el of elements) {\n      const rect = el.getBoundingClientRect();\n      if (rect.top >= 0 && rect.bottom <= window.innerHeight) {\n        setUnreadIds((prev) => {\n          if (!prev.includes(el.dataset.id)) {\n            return [...prev, el.dataset.id];\n          }\n          return prev;\n        });\n      }\n    }\n  };\n\n  const throttle = (callback, delay) => {\n    let lastCall = 0;\n    return function (...args) {\n      const now = new Date().getTime();\n      if (now - lastCall < delay) {\n        return;\n      }\n      lastCall = now;\n      callback(...args);\n    };\n  };\n\n  useEffect(() => {\n    handleScroll();\n  }, []);\n\n  useEffect(() => {\n    const throttledScroll = throttle(handleScroll, 500);\n    scrollWrapRef.current.addEventListener(\"scroll\", throttledScroll);\n    return () =>\n      // eslint-disable-next-line\n      scrollWrapRef?.current?.removeEventListener(\"scroll\", throttledScroll);\n  }, []);\n\n  useEffect(() => {\n    const throttledScroll = throttle(handleScroll, 500);\n    window.addEventListener(\"scroll\", throttledScroll);\n    return () => window.removeEventListener(\"scroll\", throttledScroll);\n  }, []);\n\n  const notifications = useSelector(selectAllNotifications);\n\n  return (\n    <>\n      <DesktopWrap>\n        <ProfileHeader classN=\"other\" />\n        <ProfileH2>{t(\"profile.myProfile\")}</ProfileH2>\n        <PersonalInfoText>\n          {t(`profile.nav.${location?.pathname.split(\"/\")[2]}`)}\n        </PersonalInfoText>\n      </DesktopWrap>\n      <SubPagesSection>\n        <ProfileScrollContainer>\n          <MobTabWrap>\n            <ProfileNavigation />\n          </MobTabWrap>\n          <ScrollWrap\n            ref={scrollWrapRef}\n            id=\"scrollContainer\"\n            $variant=\"notifications\"\n          >\n            <NotificationsSection>\n              <MainContainer>\n                <NotificationsList>\n                  {notifications?.length > 0 &&\n                    notifications?.map((element) => (\n                      <NotificationItem\n                        key={element.id}\n                        data-id={element.id}\n                        className=\"notification-item\"\n                      >\n                        <Notification\n                          data={element}\n                          time\n                          showDetails\n                          variant=\"all\"\n                          unreadIds={unreadIds}\n                          className={element.type.toLowerCase()}\n                          setIsNotificationDeleted={setIsNotificationDeleted}\n                          iconId={\n                            element.type.toLowerCase() === \"reminder\"\n                              ? \"info\"\n                              : element.type.toLowerCase()\n                          }\n                        />\n                      </NotificationItem>\n                    ))}\n                </NotificationsList>\n              </MainContainer>\n            </NotificationsSection>\n          </ScrollWrap>\n        </ProfileScrollContainer>\n      </SubPagesSection>\n    </>\n  );\n};\n\nexport default NotificationsSubPage;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const InfoCont = styled.div`\n  margin-top: 46px;\n  margin-bottom: 100px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 48px;\n    margin-bottom: 90px;\n    width: 545px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin: 0 55px 168px auto;\n    width: 718px;\n  }\n\n  @media screen and (min-width: 1920px) {\n    margin-right: 145px;\n    width: 848px;\n  }\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 32px;\n\n  @media screen and (min-width: 1440px) {\n    gap: 40px;\n  }\n`;\n\nexport const InfoItem = styled.li`\n  width: 100%;\n`;\n\nexport const ItemCont = styled.div`\n  display: flex;\n`;\n\nexport const InfoName = styled.p`\n  font-family: Nunito;\n  font-weight: 300;\n  font-size: 16px;\n  line-height: 1.5;\n  color: #0b1c24;\n  min-width: 90px;\n  margin-right: 40px;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 35px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 18px;\n    min-width: 100px;\n    margin-right: 45px;\n  }\n`;\n\nexport const InfoValue = styled.p`\n  font-family: Nunito;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.45;\n  color: #0b1c24;\n  width: 100%;\n  border-bottom: 1px solid #d8dee4;\n\n  @media screen and (min-width: 1440px) {\n    font-size: 18px;\n  }\n`;\n\nexport const InfoBtnsWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 32px;\n  margin-top: 56px;\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 64px;\n  }\n`;\n\nexport const SubmitBtn = styled(Link)`\n  display: flex;\n  justify-content: center;\n  font-family: Montserrat;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.5;\n  width: 90%;\n  border-radius: 12px;\n  padding: 12px 24px;\n  \n  color: #fff;\n  background: linear-gradient(\n    90deg,\n    rgba(200, 81, 32, 1) 0%,\n    rgba(255, 165, 2, 1) 100%\n  );\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    width: 343px;\n  }\n`;\n\nexport const RemoveAccBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  margin: 0 auto;\n\n  svg {\n    fill: #fe4747;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 12px;\n  }\n`;\n\nexport const RemoveBtnText = styled.p`\n  font-family: Montserrat;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.5;\n  color: #fe4747;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.22;\n  }\n`;\n","import { useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport { RedTrashIcon } from \"assets/icons\";\nimport {\n  selectEmail,\n  selectUserComment,\n  selectUserFistName,\n  selectUserLastName,\n  selectUserNumber,\n  selectUserOrganization,\n  selectUserRegion,\n} from \"../../../redux/auth/authSelectors\";\nimport {\n  InfoBtnsWrap,\n  InfoItem,\n  InfoList,\n  InfoName,\n  InfoCont,\n  InfoValue,\n  ItemCont,\n  RemoveAccBtn,\n  RemoveBtnText,\n  SubmitBtn,\n} from \"./ProfileInfo.styled\";\n\nconst ProfileInfo = () => {\n  const location = useLocation();\n  const { t, i18n } = useTranslation();\n\n  const userFirstName = useSelector(selectUserFistName);\n  const userLastName = useSelector(selectUserLastName);\n  const userEmail = useSelector(selectEmail);\n  const userNumber = useSelector(selectUserNumber);\n  const userRegion = useSelector(selectUserRegion);\n  const userOrganization = useSelector(selectUserOrganization);\n  const userComment = useSelector(selectUserComment);\n\n  const textPlaceholder = t(\"profile.personal.placeholder\");\n\n  const region = () => {\n    if (!userRegion) {\n      return;\n    }\n\n    const regionName =\n      i18n.language === \"uk\"\n        ? userRegion?.regionUa?.toLowerCase()\n        : userRegion?.regionEn?.toLowerCase();\n\n    const regionUpperName =\n      regionName.charAt(0).toUpperCase() + regionName.slice(1);\n\n    if ([\"крим\", \"crimea\"].includes(regionUpperName.toLowerCase())) {\n      return regionUpperName;\n    }\n\n    return `${regionUpperName} ${t(\"profile.personal.regionName\")}`;\n  };\n\n  return (\n    <InfoCont>\n      <InfoList>\n        <InfoItem>\n          <ItemCont>\n            <InfoName>{t(\"profile.personal.name\")}</InfoName>\n            <InfoValue>\n              {userFirstName ? userFirstName : textPlaceholder}\n            </InfoValue>\n          </ItemCont>\n        </InfoItem>\n        <InfoItem>\n          <ItemCont>\n            <InfoName>{t(\"profile.personal.surname\")}</InfoName>\n            <InfoValue>\n              {userLastName ? userLastName : textPlaceholder}\n            </InfoValue>\n          </ItemCont>\n        </InfoItem>\n        <InfoItem>\n          <ItemCont>\n            <InfoName>{t(\"profile.personal.phone\")}</InfoName>\n            <InfoValue>{userNumber ? userNumber : textPlaceholder}</InfoValue>\n          </ItemCont>\n        </InfoItem>\n        <InfoItem>\n          <ItemCont>\n            <InfoName>{t(\"profile.personal.email\")}</InfoName>\n            <InfoValue>{userEmail ? userEmail : textPlaceholder}</InfoValue>\n          </ItemCont>\n        </InfoItem>\n        <InfoItem>\n          <ItemCont>\n            <InfoName>{t(\"profile.personal.region\")}</InfoName>\n            <InfoValue>{userRegion ? region() : textPlaceholder}</InfoValue>\n          </ItemCont>\n        </InfoItem>\n        <InfoItem>\n          <ItemCont>\n            <InfoName>{t(\"profile.personal.organization\")}</InfoName>\n            <InfoValue>\n              {userOrganization ? userOrganization : textPlaceholder}\n            </InfoValue>\n          </ItemCont>\n        </InfoItem>\n        <InfoItem>\n          <ItemCont>\n            <InfoName>{t(\"profile.personal.about\")}</InfoName>\n            <InfoValue>{userComment ? userComment : textPlaceholder}</InfoValue>\n          </ItemCont>\n        </InfoItem>\n      </InfoList>\n      <InfoBtnsWrap>\n        <SubmitBtn\n          to=\"/profile/change\"\n          state={{ from: location }}\n          className=\"accent-button\"\n        >\n          {t(\"profile.personal.change\")}\n        </SubmitBtn>\n        <RemoveAccBtn className=\"remove-accent-text\">\n          <RedTrashIcon />\n          <RemoveBtnText>{t(\"profile.personal.delete\")}</RemoveBtnText>\n        </RemoveAccBtn>\n      </InfoBtnsWrap>\n    </InfoCont>\n  );\n};\n\nexport default ProfileInfo;\n","import styled from \"styled-components\";\n\nexport const SupportSection = styled.section`\n  padding: 24px 0 100px 00;\n  margin: 0 auto;\n\n  h3 {\n    text-align: center;\n    font-family: Nunito;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 1.5;\n    color: #000;\n    max-width: 360px;\n    margin: 0 auto 32px auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 32px 0 112px 00;\n\n    h3 {\n      max-width: 637px;\n      margin-bottom: 50px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 16px 0 100px 00;\n\n    h3 {\n      max-width: 762px;\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const SupportForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  max-width: 360px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    max-width: 593px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 659px;\n  }\n\n  label {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    font-family: Nunito;\n    font-size: 16px;\n    font-weight: 600;\n    line-height: 1.25;\n    color: #415158;\n    width: 100%;\n    margin-bottom: 42px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 68px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      margin-bottom: 104px;\n    }\n\n    textarea {\n      border-radius: 8px;\n      border: 1px solid #787d83;\n      background: #f5f5f5;\n      resize: none;\n      width: 100%;\n      height: 272px;\n      padding: 12px;\n\n      @media screen and (min-width: 768px) {\n        height: 144px;\n      }\n\n      &::placeholder {\n        font-family: Nunito;\n        font-size: 16px;\n        font-weight: 400;\n        line-height: 1.25;\n        color: #0b1c24;\n      }\n    }\n  }\n\n  p {\n    text-align: center;\n    font-family: Nunito;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 1.25;\n    color: #000;\n    margin: 0 auto 32px auto;\n    max-width: 368px;\n\n    span {\n      font-weight: 700;\n    }\n\n    @media screen and (min-width: 768px) {\n      max-width: 596px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      max-width: 659px;\n    }\n  }\n`;\n\nexport const SupportSubmitBtn = styled.button`\n  display: block;\n  width: 100%;\n  max-width: 321px;\n  padding: 12px 24px;\n  margin: 0 auto;\n  color: #fff;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.5;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 343px;\n    font-size: 18px;\n  }\n`;\n\nexport const SuccessfullySentBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport sprite from \"assets/icons/sprite.svg\";\nimport ProfileNavigation from \"../ProfileNavigation\";\nimport ProfileHeader from \"../ProfileHeader\";\nimport {\n  DesktopWrap,\n  MobTabWrap,\n  ProfileScrollContainer,\n  SubPagesSection,\n} from \"../Tabs/MyTasks/MyTasks.styled\";\nimport { ProfileH2 } from \"../MyProfile/MyProfile.styled\";\nimport { PersonalInfoText } from \"../MyPersonalInfo/MyPersonalInfo.styled\";\nimport { MainContainer } from \"layouts/MainContainer.styled\";\nimport {\n  SuccessfullySentBlock,\n  SupportForm,\n  SupportSection,\n  SupportSubmitBtn,\n} from \"./SupportSubPage.styled\";\nimport {\n  ModalLink,\n  ModalPic,\n  ModalTitle,\n} from \"components/Tasks/SuccessModal/SuccessModal.styled\";\nimport { ModalText } from \"components/Tasks/ConfirmationModal/ConfirmationModal.styled\";\n\nconst SupportSubPage = () => {\n  const [isFieldTouched, setIsFieldTouched] = useState(false);\n  const [shouldHideForm, setShouldHideForm] = useState(false);\n  const { t } = useTranslation();\n  const location = useLocation();\n\n  const handleSupportSubmit = (event) => {\n    event.preventDefault();\n\n    event.currentTarget.reset();\n    setShouldHideForm(true);\n  };\n\n  return (\n    <>\n      <DesktopWrap>\n        <ProfileHeader classN=\"other\" />\n        <ProfileH2>{t(\"profile.myProfile\")}</ProfileH2>\n        <PersonalInfoText>\n          {t(`profile.nav.${location?.pathname.split(\"/\")[2]}`)}\n        </PersonalInfoText>\n      </DesktopWrap>\n      <SubPagesSection>\n        <ProfileScrollContainer>\n          <MobTabWrap>\n            <ProfileNavigation />\n          </MobTabWrap>\n          <SupportSection>\n            <MainContainer>\n              {!shouldHideForm ? (\n                <>\n                  <h3>{t(\"profile.support.text\")}</h3>\n                  <SupportForm onSubmit={handleSupportSubmit}>\n                    <label>\n                      {t(\"profile.support.label\")}\n                      <textarea\n                        name=\"comment\"\n                        placeholder={t(\"profile.support.placeholder\")}\n                        maxLength={9000}\n                        onChange={(event) =>\n                          setIsFieldTouched(\n                            event.target.value.trim().length > 30\n                          )\n                        }\n                      ></textarea>\n                    </label>\n\n                    <p>\n                      {t(\"profile.support.msg1\")}{\" \"}\n                      <span>piadrumka@gmail.com.</span>{\" \"}\n                      {t(\"profile.support.msg2\")}\n                    </p>\n                    <SupportSubmitBtn\n                      type=\"submit\"\n                      className=\"accent-button\"\n                      disabled={!isFieldTouched}\n                    >\n                      {t(\"profile.support.send\")}\n                    </SupportSubmitBtn>\n                  </SupportForm>\n                </>\n              ) : (\n                <SuccessfullySentBlock>\n                  <ModalTitle>\n                    {t(\"profile.support.successSentTitle\")}\n                  </ModalTitle>\n                  <ModalText>{t(\"profile.support.successSentText\")}</ModalText>\n                  <ModalPic width={177} height={177}>\n                    <use href={`${sprite}#icon-success`}></use>\n                  </ModalPic>\n                  <ModalLink\n                    to=\"/\"\n                    className=\"accent-button\"\n                    state={{ from: location }}\n                  >\n                    {t(\"createTask.successWindow.backHome\")}\n                  </ModalLink>\n                </SuccessfullySentBlock>\n              )}\n            </MainContainer>\n          </SupportSection>\n        </ProfileScrollContainer>\n      </SubPagesSection>\n    </>\n  );\n};\n\nexport default SupportSubPage;\n","import styled from \"styled-components\";\n\nexport const SubSection = styled.section`\n  padding-top: 56px;\n\n  &.change {\n    padding-top: 123px;\n  }\n`;\n","import ProfileInfo from \"../ProfileInfo\";\nimport ProfileNavigation from \"../ProfileNavigation\";\nimport { ProfileScrollContainer } from \"../Tabs/MyTasks/MyTasks.styled\";\nimport { SubSection } from \"../Profile.styled\";\n\nconst ProfileInfoSubPage = () => {\n  return (\n    <SubSection>\n      <ProfileScrollContainer>\n        <ProfileNavigation />\n        <ProfileInfo />\n      </ProfileScrollContainer>\n    </SubSection>\n  );\n};\n\nexport default ProfileInfoSubPage;\n","import ProfileNavigation from \"../ProfileNavigation\";\nimport { ProfileScrollContainer } from \"../Tabs/MyTasks/MyTasks.styled\";\nimport { SubSection } from \"../Profile.styled\";\nimport ChangeSection from \"../ChangeSection\";\n\nconst ChangeInfoSubPage = () => {\n  return (\n    <SubSection className=\"change\">\n      <ProfileScrollContainer>\n        <ProfileNavigation />\n        <ChangeSection />\n      </ProfileScrollContainer>\n    </SubSection>\n  );\n};\n\nexport default ChangeInfoSubPage;\n","import { useParams } from \"react-router-dom\";\nimport ProfileInfoSubPage from \"components/Profile/ProfileInfoSubPage\";\nimport MyTasks from \"components/Profile/Tabs/MyTasks\";\nimport ChangeInfoSubPage from \"components/Profile/ChangeInfoSubPage\";\nimport ChangePasswordPage from \"./ChangePasswordPage\";\nimport SupportSubPage from \"components/Profile/SupportSubPage\";\nimport NotificationsSubPage from \"components/Profile/NotificationsSubPage\";\n\nconst ProfileSubPage = () => {\n  const { id } = useParams();\n\n  const renderContent = () => {\n    switch (id) {\n      case \"personal\":\n        return <ProfileInfoSubPage />;\n      case \"change\":\n        return <ChangeInfoSubPage />;\n      case \"changePassword\":\n        return <ChangePasswordPage />;\n      case \"requests\":\n        return <MyTasks />;\n      case \"responses\":\n        return <MyTasks />;\n      case \"notifications\":\n        return <NotificationsSubPage />;\n      case \"support\":\n        return <SupportSubPage />;\n      default:\n        return null;\n    }\n  };\n\n  return renderContent();\n};\n\nexport default ProfileSubPage;\n"],"names":["NotificationsSection","styled","section","_templateObject","_taggedTemplateLiteral","NotificationsList","ul","_templateObject2","NotificationsSubPage","isNotificationDeleted","setIsNotificationDeleted","useState","unreadIds","setUnreadIds","dispatch","useDispatch","t","useTranslation","location","useLocation","scrollWrapRef","useRef","useEffect","getAllNotificationsThunk","handleScroll","elements","document","getElementById","getElementsByClassName","el","rect","getBoundingClientRect","top","bottom","window","innerHeight","prev","includes","dataset","id","throttle","callback","delay","lastCall","now","Date","getTime","arguments","throttledScroll","current","addEventListener","_scrollWrapRef$curren","removeEventListener","notifications","useSelector","selectAllNotifications","_jsxs","_Fragment","children","DesktopWrap","_jsx","ProfileHeader","classN","ProfileH2","PersonalInfoText","concat","pathname","split","SubPagesSection","ProfileScrollContainer","MobTabWrap","ProfileNavigation","ScrollWrap","ref","$variant","MainContainer","length","map","element","NotificationItem","className","Notification","data","time","showDetails","variant","type","toLowerCase","iconId","InfoCont","div","InfoList","InfoItem","li","_templateObject3","ItemCont","_templateObject4","InfoName","p","_templateObject5","InfoValue","_templateObject6","InfoBtnsWrap","_templateObject7","SubmitBtn","Link","_templateObject8","RemoveAccBtn","button","_templateObject9","RemoveBtnText","_templateObject10","ProfileInfo","i18n","userFirstName","selectUserFistName","userLastName","selectUserLastName","userEmail","selectEmail","userNumber","selectUserNumber","userRegion","selectUserRegion","userOrganization","selectUserOrganization","userComment","selectUserComment","textPlaceholder","region","_userRegion$regionUa","_userRegion$regionEn","regionName","language","regionUa","regionEn","regionUpperName","charAt","toUpperCase","slice","to","state","from","RedTrashIcon","SupportSection","SupportForm","form","SupportSubmitBtn","SuccessfullySentBlock","SupportSubPage","isFieldTouched","setIsFieldTouched","shouldHideForm","setShouldHideForm","ModalTitle","ModalText","ModalPic","width","height","href","sprite","ModalLink","onSubmit","event","preventDefault","currentTarget","reset","name","placeholder","maxLength","onChange","target","value","trim","disabled","SubSection","ProfileInfoSubPage","ChangeInfoSubPage","ChangeSection","ProfileSubPage","useParams","renderContent","ChangePasswordPage","MyTasks"],"sourceRoot":""}