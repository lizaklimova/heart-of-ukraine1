{"version":3,"file":"static/js/633.4dd4dad3.chunk.js","mappings":"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","sources":["components/Auth/CommonAuth.styled.jsx","components/Auth/MobPictureContainer/MobPictureContainer.styled.jsx","components/Auth/MobPictureContainer/MobPictureContainer.jsx","components/Auth/PictureContainer/PictureContainer.styled.jsx","components/Auth/PictureContainer/PictureContainer.jsx","components/Auth/PwdRequirements/PwdRequirements.styled.jsx","components/Auth/PwdRequirements/PwdRequirements.jsx","components/Auth/ShowPasswordBtn/ShowPasswordBtn.styled.jsx","components/Auth/ShowPasswordBtn/ShowPasswordBtn.jsx","components/Auth/SignInForm/SignInForm.styled.jsx","components/Auth/SignUpForm/SignUpForm.styled.jsx","components/Loaders/SmallSpinner/SmallSpinner.jsx","components/Auth/AuthNav/AuthNav.styled.jsx","components/Auth/AuthNav/AuthNav.jsx","components/Auth/GoogleBtn/GoogleBtn.styled.jsx","components/Auth/GoogleBtn/GoogleBtn.jsx","components/Auth/SignUpForm/SignUpForm.jsx","pages/SignUpPage.jsx","components/Auth/SignInForm/SignInForm.jsx","pages/SignInPage.jsx","pages/AuthPage.jsx","schemas/changeSchema.js","schemas/registerSchema.js","schemas/emailSchema.js","schemas/passwordSchema.js","schemas/createTaskSchema.js","schemas/confirmApplicationSchema.js","schemas/changePassworsSchema.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const AuthWrap = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 16px;\n\n  @media screen and (min-width: 393px) {\n    width: 393px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 423px;\n    padding-top: 30px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    position: static;\n    padding-top: 69px;\n    width: ${({ $variant }) => ($variant === \"register\" ? \"700px\" : \"471px\")};\n  }\n`;\n\nexport const ScrollContainer = styled.div`\n  min-height: 100vh;\n  position: relative;\n\n  @media screen and (min-width: 768px) {\n    max-height: 100vh;\n    padding-top: 20px;\n    overflow-y: auto;\n  }\n`;\n\nexport const AuthForm = styled.form`\n  max-width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    gap: 12px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    ${({ $variant }) =>\n      $variant === \"register\" &&\n      `flex-direction: row;\n      flex-wrap: wrap;`}\n  }\n`;\n\nexport const AuthLabel = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  line-height: 1.43;\n  color: #415158;\n  margin-bottom: 8px;\n  gap: 4px;\n\n  &.passwordLabel {\n    position: relative;\n\n    @media screen and (min-width: 1440px) {\n      margin: unset;\n    }\n  }\n\n  &#repeat-password {\n    margin-top: 10px;\n\n    @media screen and (min-width: 1440px) {\n      margin: unset;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: ${({ $variant }) =>\n      $variant === \"register\" ? \"calc((100% - 16px) / 2)\" : \"100%\"};\n  }\n`;\n\nexport const AuthInput = styled.input`\n  width: 100%;\n  border-radius: 8px;\n  border: 1px solid #d8dee4;\n  padding: 14px 12px;\n  background-color: #f5f5f5;\n  color: #0b1c24;\n\n  &[type=\"password\"] {\n    font-weight: 700;\n\n    &::-webkit-credentials-auto-fill-button {\n      visibility: hidden !important;\n      pointer-events: none !important;\n    }\n\n    &::placeholder {\n      font-weight: 400;\n    }\n  }\n\n  &.password,\n  &.confirm-password,\n  &.sign-in-password {\n    padding-right: 40px;\n  }\n\n  &::placeholder {\n    color: #a0a9b4;\n  }\n\n  &.invalid {\n    border-color: #fe4747;\n  }\n`;\n\nexport const AuthErrorText = styled.p`\n  font-size: 14px;\n  color: #fe4747;\n`;\n\nexport const AuthSubmitBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: Montserrat;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.5;\n  width: 90%;\n  border-radius: 12px;\n  padding: 12px 24px;\n  margin: 15px auto 32px auto;\n  color: #fff;\n  background: linear-gradient(\n    90deg,\n    rgba(200, 81, 32, 1) 0%,\n    rgba(255, 165, 2, 1) 100%\n  );\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.57;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    margin-bottom: 26px;\n    width: 343px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 28px;\n    max-height: 46px;\n  }\n`;\n\nexport const LoginTextBlock = styled.div`\n  margin-top: 70px;\n  margin-bottom: 34px;\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 90px;\n  }\n`;\n\nexport const WelcomeText = styled.p`\n  font-family: Montserrat;\n  font-size: 32px;\n  font-weight: 600;\n  line-height: 1.5;\n  text-align: center;\n  color: #246e8c;\n\n  @media screen and (min-width: 768px) {\n    font-size: 38px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 48px;\n  }\n`;\n\nexport const AuthText = styled.p`\n  font-family: Nunito;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.5;\n  max-width: 100%;\n  text-align: center;\n  margin-top: 16px;\n  color: #0b1c24;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 8px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 16px;\n    font-size: 22px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const MobPicContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 40px 0 30px 0;\n  background-color: #efeff5;\n  &::-webkit-scrollbar {\n    width: 4px !important;\n    height: 4px !important;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: rgba(200, 81, 32, 0.3) !important;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: linear-gradient(\n      90deg,\n      rgba(200, 81, 32, 1) 0%,\n      rgba(255, 165, 2, 1) 100%\n    ) !important;\n    border-radius: 4px !important;\n  }\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n","import { MobPicContainer } from \"./MobPictureContainer.styled\";\n\nconst MobPictureContainer = ({ children }) => {\n  return <MobPicContainer>{children}</MobPicContainer>;\n};\n\nexport default MobPictureContainer;\n","import styled from \"styled-components\";\nimport deskPic from \"assets/images/auth/auth-bg-desk.jpg\";\nimport tabPic from \"assets/images/auth/auth-bg-tab.jpg\";\n\nexport const PicContainer = styled.div`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #efeff5;\n  }\n`;\n\nexport const PicBlock = styled.div`\n  align-self: stretch;\n  height: 100%;\n  min-width: 253px;\n  width: 50%;\n  background: url(${tabPic}) no-repeat center / cover;\n\n  @media screen and (min-width: 1000px) {\n    background-image: url(${deskPic});\n  }\n\n  @media screen and (min-width: 1440px) {\n    min-width: 650px;\n  }\n\n  @media screen and (min-width: 1700px) {\n    min-width: 760px;\n  }\n\n  @media screen and (min-width: 1920px) {\n    min-width: 960px;\n  }\n`;\n\nexport const PositioningWrap = styled.div`\n  @media screen and (min-width: 768px) {\n    width: 70%;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 50%;\n  }\n`;\n","import { PicContainer, PicBlock } from \"./PictureContainer.styled\";\n\nconst PictureContainer = ({ children }) => {\n  return (\n    <PicContainer>\n      {children}\n      <PicBlock />\n    </PicContainer>\n  );\n};\n\nexport default PictureContainer;\n","import styled from \"styled-components\";\n\nexport const RequirWrap = styled.div`\n  position: absolute;\n  top: ${({ $variant }) => ($variant === \"changePwd\" ? \"78px\" : \"73px\")};\n  margin: 5px 0 5px 0;\n  width: 100%;\n\n  @media screen and (min-width: 1440px) {\n    top: ${({ $variant }) => ($variant === \"changePwd\" ? \"78px\" : \"75px\")};\n  }\n`;\n\nexport const ShowRequirementsBtn = styled.button`\n  padding: 0;\n  background-color: transparent;\n\n  &:hover + ul,\n  &:focus + ul {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  & > svg {\n    stroke: #666c6f;\n    fill: #666c6f;\n  }\n\n  &.invalid > svg {\n    stroke: #fe4747;\n    fill: #fe4747;\n  }\n`;\n\nexport const RequirList = styled.ul`\n  visibility: hidden;\n  opacity: 0;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  gap: 7px;\n  min-width: 100%;\n  border-radius: 0px 18px 18px 18px;\n  border: 1px solid #c2ced8;\n  background-color: #f5f5f5;\n  padding: 16px;\n  z-index: 2;\n  transition: opacity 150ms linear, visibility 150ms linear;\n\n  &:hover {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  li {\n    display: flex;\n    justify-content: space-between;\n    gap: 12px;\n  }\n\n  li p {\n    color: #666c6f;\n    font-size: 14px;\n    line-height: normal;\n\n    &.invalid {\n      color: #fe4747;\n    }\n  }\n`;\n","import { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport sprite from \"assets/icons/sprite.svg\";\nimport {\n  RequirList,\n  RequirWrap,\n  ShowRequirementsBtn,\n} from \"./PwdRequirements.styled\";\n\nconst PwdRequirements = ({ error, touched, value, variant }) => {\n  const [requirementsMet, setRequirementsMet] = useState({\n    length: false,\n    uppercase: false,\n    lowercase: false,\n    digit: false,\n    specialSym: false,\n  });\n\n  useEffect(() => {\n    const checkRequirements = (newValue) => {\n      setRequirementsMet({\n        length: newValue.length >= 8 && newValue.length <= 30,\n        uppercase: /[A-Z]/.test(newValue),\n        lowercase: /[a-z]/.test(newValue),\n        digit: /[0-9]/.test(newValue),\n        specialSym: /^[a-zA-Z0-9]+$/.test(newValue),\n      });\n    };\n\n    checkRequirements(value);\n  }, [value]);\n\n  const { t } = useTranslation();\n\n  const { length, uppercase, lowercase, digit, specialSym } = requirementsMet;\n\n  return (\n    <RequirWrap $variant={variant}>\n      <ShowRequirementsBtn\n        type=\"button\"\n        aria-label=\"show password requirements\"\n        className={error && touched ? \"invalid\" : \"\"}\n      >\n        <svg width={16} height={16}>\n          <use href={`${sprite}#icon-rules`}></use>\n        </svg>\n      </ShowRequirementsBtn>\n\n      <RequirList>\n        <li>\n          <p className={!length && touched ? \"invalid\" : \"\"}>\n            {t(\"validation.password.length\")}\n          </p>\n          {length && (\n            <svg width={17} height={17}>\n              <use href={`${sprite}#icon-checked`}></use>\n            </svg>\n          )}\n        </li>\n        <li>\n          <p className={!uppercase && touched ? \"invalid\" : \"\"}>\n            {t(\"validation.password.uppercase\")}\n          </p>\n          {uppercase && (\n            <svg width={17} height={17}>\n              <use href={`${sprite}#icon-checked`}></use>\n            </svg>\n          )}\n        </li>\n        <li>\n          <p className={!lowercase && touched ? \"invalid\" : \"\"}>\n            {t(\"validation.password.lowercase\")}\n          </p>\n          {lowercase && (\n            <svg width={17} height={17}>\n              <use href={`${sprite}#icon-checked`}></use>\n            </svg>\n          )}\n        </li>\n        <li>\n          <p className={!digit && touched ? \"invalid\" : \"\"}>\n            {t(\"validation.password.digit\")}\n          </p>\n          {digit && (\n            <svg width={17} height={17}>\n              <use href={`${sprite}#icon-checked`}></use>\n            </svg>\n          )}\n        </li>\n        <li>\n          <p className={!specialSym && touched ? \"invalid\" : \"\"}>\n            {t(\"validation.password.specialSym\")}\n          </p>\n          {specialSym && (\n            <svg width={17} height={17}>\n              <use href={`${sprite}#icon-checked`}></use>\n            </svg>\n          )}\n        </li>\n      </RequirList>\n    </RequirWrap>\n  );\n};\n\nexport default PwdRequirements;\n","import styled from \"styled-components\";\n\nexport const ShowBtn = styled.button`\n  position: absolute;\n  top: 37px;\n  right: 12px;\n  padding: 0;\n  background-color: transparent;\n  ${({ $variant }) => $variant === \"changePwd\" && \"top: 41px;\"}\n\n  svg {\n    fill: #0b1c24;\n  }\n\n  @media screen and (min-width: 768px) {\n    top: 41px;\n\n    ${({ $variant }) => $variant === \"changePwd\" && \"top: 42px;\"}\n  }\n`;\n","import sprite from \"assets/icons/sprite.svg\";\nimport { ShowBtn } from \"./ShowPasswordBtn.styled\";\n\nconst ShowPasswordBtn = ({ isPwdShown, setPwdShown, variant }) => {\n  return (\n    <ShowBtn\n      type=\"button\"\n      aria-label=\"Show password\"\n      onClick={() => setPwdShown((prev) => !prev)}\n      $variant={variant}\n    >\n      <svg width={20} height={20}>\n        <use\n          href={`${sprite}#${isPwdShown ? \"icon-eye-open\" : \"icon-eye-slash\"}`}\n        ></use>\n      </svg>\n    </ShowBtn>\n  );\n};\n\nexport default ShowPasswordBtn;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { gradientTextHover } from \"components/Tasks/Tasks.styled\";\n\nexport const ResetPwdBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  line-height: 1;\n  margin-bottom: 48px;\n  ${({ $variant }) => $variant === \"changePwd\" && \"margin: 40px 0 32px 0;\"}\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 34px;\n    ${({ $variant }) => $variant === \"changePwd\" && \"margin-top: 56px;\"}\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 28px;\n    ${({ $variant }) => $variant === \"changePwd\" && \"margin-top: 74px;\"}\n  }\n\n  @media screen and (min-width: 1920px) {\n    ${({ $variant }) => $variant === \"changePwd\" && \"margin-top: 48px;\"}\n  }\n\n  p {\n    color: #423939;\n  }\n`;\n\nexport const ResetPwdLink = styled(Link)`\n  color: #a7552b;\n  font-family: Montserrat;\n  font-weight: 500;\n  ${gradientTextHover}\n`;\n","import styled from \"styled-components\";\n\nexport const PrivacyLabel = styled.label`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  gap: 8px;\n\n  ${({ $variant }) =>\n    $variant === \"confirm\" &&\n    \"align-items: center;justify-content: flex-start;\"}\n\n  input {\n    min-width: 24px;\n    height: 24px;\n    display: none;\n  }\n\n  input:checked + div svg {\n    display: block;\n  }\n\n  input:checked + div {\n    transition: border-color 150ms linear;\n    border-color: #787d83;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 100%;\n    align-items: center;\n    justify-content: flex-start;\n    margin-top: 30px;\n\n    ${({ $variant }) => $variant === \"confirm\" && \" margin-top: 0;\"}\n  }\n`;\n\nexport const CheckBox = styled.div`\n  position: absolute;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 24px;\n  height: 24px;\n  border-radius: 4px;\n  border: 1px solid #d8dee4;\n  background-color: #f5f5f5;\n\n  &.invalid {\n    border-color: #fe4747;\n  }\n\n  svg {\n    display: none;\n  }\n`;\n\nexport const PrivacyText = styled.p`\n  padding-left: 32px;\n  font-size: 14px;\n  color: #0b1c24;\n  line-height: 1.5;\n  margin-top: -3px;\n\n  a {\n    color: #a7552b !important;\n    transition: color 150ms linear;\n\n    &:hover,\n    &:focus {\n      color: #872e00 !important;\n    }\n\n    &:active {\n      color: #5a1e00 !important;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 2px;\n  }\n`;\n","import { TailSpin } from \"react-loader-spinner\";\n\nconst SmallSpinner = ({ width, height, color = \"#fff\" }) => {\n  return (\n    <TailSpin\n      visible={true}\n      height={width}\n      width={height}\n      color={color}\n      ariaLabel=\"tail-spin-loading\"\n      radius=\"1\"\n    />\n  );\n};\n\nexport default SmallSpinner;\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const NavBlock = styled.nav`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 24px;\n  margin-bottom: 32px;\n\n  @media screen and (min-width: 768px) {\n    gap: 125px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 110px;\n  }\n`;\n\nexport const AuthNavLink = styled(NavLink)`\n  font-family: Montserrat;\n  font-size: 24px;\n  line-height: 1.5;\n  color: #415158;\n\n  &:not(&.active):hover,\n  &:not(&.active):focus {\n    background: conic-gradient(\n      from -3deg at 100% -13%,\n      #ffa502 0deg,\n      #c85120 360deg\n    );\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 24px;\n  }\n\n  &.active {\n    position: relative;\n    font-size: 24px;\n    font-weight: 600;\n    color: #0b1c24;\n    border-bottom: 2px solid #ffa502;\n\n    @media screen and (min-width: 768px) {\n      font-size: 26px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      font-size: 24px;\n    }\n  }\n`;\n","import { useTranslation } from \"react-i18next\";\nimport { NavBlock, AuthNavLink } from \"./AuthNav.styled\";\n\nconst AuthNav = () => {\n  const { t } = useTranslation();\n\n  return (\n    <NavBlock>\n      <AuthNavLink to=\"/auth/login\">{t(\"auth.login\")}</AuthNavLink>\n      <AuthNavLink to=\"/auth/register\">{t(\"auth.register\")}</AuthNavLink>\n    </NavBlock>\n  );\n};\n\nexport default AuthNav;\n","import styled, { css } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst commonBeforeAfter = css`\n  position: absolute;\n  top: 50%;\n  display: block;\n  content: \"\";\n  width: 100px;\n  height: 2px;\n  background-color: #c2ced8;\n\n  @media screen and (min-width: 350px) {\n    width: 115px;\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 126px;\n  }\n`;\n\nexport const DecorOrElement = styled.p`\n  position: relative;\n  font-size: 16px;\n  line-height: 1;\n  text-align: center;\n  width: 90%;\n  color: #0b1c24;\n  margin: 0 auto;\n\n  &::before {\n    ${commonBeforeAfter}\n    right: 0;\n  }\n\n  &::after {\n    ${commonBeforeAfter}\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 343px;\n  }\n`;\n\nexport const GoogleLink = styled(Link)`\n  font-family: Montserrat;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.5;\n  width: 90%;\n  border-radius: 12px;\n  border: 2px solid #c2ced8;\n  padding: 12px 24px;\n  margin: 32px auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  background-color: transparent;\n  color: #707aa7;\n  transition: border-color 150ms linear, background-color 150ms linear;\n\n  &:hover,\n  &:focus {\n    border-color: #707aa7;\n  }\n\n  &:active {\n    border-color: #c2ced8;\n    background-color: #c2ced8;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    width: 343px;\n    margin-top: 26px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 28px;\n    max-height: 48px;\n  }\n`;\n","import { baseURL } from \"api/axiosInstance\";\nimport { useTranslation } from \"react-i18next\";\nimport sprite from \"assets/icons/sprite.svg\";\nimport { DecorOrElement, GoogleLink } from \"./GoogleBtn.styled\";\n\nconst GoogleBtn = ({ text }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <DecorOrElement>{t(\"auth.or\")}</DecorOrElement>\n\n      <GoogleLink to={`${baseURL}login/oauth2/authorization/google`}>\n        {text}\n        <svg width={20} height={20}>\n          <use href={`${sprite}#icon-google`}></use>\n        </svg>\n      </GoogleLink>\n    </>\n  );\n};\n\nexport default GoogleBtn;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\n// import { toast } from \"react-hot-toast\";\nimport sprite from \"assets/icons/sprite.svg\";\nimport { registerSchema } from \"schemas\";\nimport { REGISTER_INIT_VALUES } from \"constants\";\nimport { registrationThunk } from \"../../../redux/auth/authOperations\";\nimport ShowPasswordBtn from \"../ShowPasswordBtn\";\nimport PwdRequirements from \"../PwdRequirements\";\n// import Notification from \"components/Notification\";\nimport SmallSpinner from \"components/Loaders/SmallSpinner\";\nimport { authSlice } from \"../../../redux/auth/authSlice\";\nimport { setStorageData } from \"helpers\";\nimport {\n  AuthForm,\n  AuthInput,\n  AuthLabel,\n  AuthErrorText,\n  AuthSubmitBtn,\n} from \"../CommonAuth.styled\";\nimport { PrivacyLabel, CheckBox, PrivacyText } from \"./SignUpForm.styled\";\n\nconst SignUpForm = () => {\n  const [isPwdShown, setIsPwdShown] = useState(false);\n  const [isConfirmPwdShown, setIsConfirmPwdShown] = useState(false);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  // const isLanguageUk = i18n.language === \"uk\";\n\n  const onSubmit = async ({\n    firstName,\n    lastName,\n    email,\n    phoneNumber,\n    password,\n    repeatPassword,\n    agreement,\n  }) => {\n    const formData = {\n      firstName,\n      lastName,\n      email,\n      phoneNumber,\n      password,\n      repeatPassword,\n      agreement,\n    };\n\n    if (!lastName) {\n      delete formData.lastName;\n    }\n\n    const isFormDataValid = await registerSchema.isValid(formData);\n    if (!isFormDataValid) return;\n\n    const res = await dispatch(\n      registrationThunk({ ...formData, agreement: undefined })\n    );\n\n    // if (res.error) {\n    //   toast.custom((t) => (\n    //     <Notification\n    //       iconId=\"notify-error\"\n    //       className=\"error\"\n    //       title={\"auth.registerErrorMsg\"}\n    //       text={\n    //         isLanguageUk\n    //           ? res.payload.errorText.uaErrorText\n    //           : res.payload.errorText.enErrorText\n    //       }\n    //       closeToaster={() => toast.remove(t.id)}\n    //       variant=\"auth\"\n    //     />\n    //   ));\n    // }\n\n    dispatch(authSlice.actions.setUserEmail(formData.email));\n    setStorageData(\"timer\", 60);\n    setStorageData(\"isTimerActive\", true);\n\n    if (!res.error) {\n      navigate(\"/auth/verification\");\n    }\n  };\n\n  const { errors, values, touched, getFieldProps, handleSubmit, isSubmitting } =\n    useFormik({\n      initialValues: REGISTER_INIT_VALUES,\n      validationSchema: registerSchema,\n      onSubmit,\n    });\n\n  return (\n    <AuthForm onSubmit={handleSubmit} $variant=\"register\">\n      <AuthLabel $variant=\"register\">\n        {t(\"auth.firstName\")}\n        <AuthInput\n          type=\"text\"\n          placeholder={t(\"auth.placeholder\")}\n          className={errors.firstName && touched.firstName && \"invalid\"}\n          maxLength={50}\n          {...getFieldProps(\"firstName\")}\n        />\n        {errors.firstName && touched.firstName && (\n          <AuthErrorText>{t(errors.firstName)}</AuthErrorText>\n        )}\n      </AuthLabel>\n\n      <AuthLabel $variant=\"register\">\n        {t(\"auth.lastName\")}\n        <AuthInput\n          type=\"text\"\n          placeholder={t(\"auth.placeholder\")}\n          className={errors.lastName && touched.lastName && \"invalid\"}\n          maxLength={50}\n          {...getFieldProps(\"lastName\")}\n        />\n        {errors.lastName && touched.lastName && (\n          <AuthErrorText>{t(errors.lastName)}</AuthErrorText>\n        )}\n      </AuthLabel>\n\n      <AuthLabel $variant=\"register\">\n        {t(\"auth.email\")}\n        <AuthInput\n          type=\"email\"\n          placeholder={t(\"auth.placeholder\")}\n          className={errors.email && touched.email && \"invalid\"}\n          {...getFieldProps(\"email\")}\n          maxLength={128}\n        />\n        {errors.email && touched.email && (\n          <AuthErrorText>{t(errors.email)}</AuthErrorText>\n        )}\n      </AuthLabel>\n\n      <AuthLabel $variant=\"register\">\n        {t(\"auth.phone\")}\n        <AuthInput\n          type=\"tel\"\n          className={errors.phoneNumber && touched.phoneNumber && \"invalid\"}\n          autoComplete=\"off\"\n          {...getFieldProps(\"phoneNumber\")}\n          maxLength={13}\n        />\n        {errors.phoneNumber && touched.phoneNumber && (\n          <AuthErrorText>{t(errors.phoneNumber)}</AuthErrorText>\n        )}\n      </AuthLabel>\n\n      <AuthLabel className=\"passwordLabel\" $variant=\"register\">\n        {t(\"auth.password\")}\n        <AuthInput\n          type={isPwdShown ? \"text\" : \"password\"}\n          placeholder={t(\"auth.placeholder\")}\n          className={\n            errors.password && touched.password\n              ? \"invalid password\"\n              : \"password\"\n          }\n          maxLength={100}\n          {...getFieldProps(\"password\")}\n        />\n\n        <ShowPasswordBtn isPwdShown={isPwdShown} setPwdShown={setIsPwdShown} />\n        <PwdRequirements\n          error={errors.password}\n          touched={touched.password}\n          value={values.password}\n        />\n      </AuthLabel>\n\n      <AuthLabel\n        id=\"repeat-password\"\n        className=\"passwordLabel\"\n        $variant=\"register\"\n      >\n        {t(\"auth.password\")}\n        <AuthInput\n          type={isConfirmPwdShown ? \"text\" : \"password\"}\n          placeholder={t(\"auth.placeholder\")}\n          className={\n            errors.repeatPassword && touched.repeatPassword\n              ? \"confirm-password invalid\"\n              : \"confirm-password\"\n          }\n          maxLength={100}\n          {...getFieldProps(\"repeatPassword\")}\n        />\n        {errors.repeatPassword && touched.repeatPassword && (\n          <AuthErrorText>{t(errors.repeatPassword)}</AuthErrorText>\n        )}\n        <ShowPasswordBtn\n          isPwdShown={isConfirmPwdShown}\n          setPwdShown={setIsConfirmPwdShown}\n        />\n      </AuthLabel>\n\n      <PrivacyLabel>\n        <input\n          type=\"checkbox\"\n          name=\"agreement\"\n          {...getFieldProps(\"agreement\")}\n        />\n        <CheckBox\n          className={errors.agreement && touched.agreement && \"invalid\"}\n        >\n          <svg width={13} height={9}>\n            <use href={`${sprite}#icon-checked`}></use>\n          </svg>\n        </CheckBox>\n        <PrivacyText>\n          {t(\"auth.agreement\")}{\" \"}\n          <a href=\"/privacyPolicy\" target=\"_blank\" rel=\"noopener noreferrer\">\n            {t(\"auth.privacyPolicy\")}\n          </a>\n        </PrivacyText>\n      </PrivacyLabel>\n\n      <AuthSubmitBtn\n        type=\"submit\"\n        className=\"accent-button\"\n        disabled={Object.keys(errors).length > 0}\n      >\n        {isSubmitting ? (\n          <SmallSpinner width={20} height={20} />\n        ) : (\n          t(\"auth.signUp\")\n        )}\n      </AuthSubmitBtn>\n    </AuthForm>\n  );\n};\n\nexport default SignUpForm;\n","import { useTranslation } from \"react-i18next\";\nimport AuthNav from \"components/Auth/AuthNav\";\nimport GoogleBtn from \"components/Auth/GoogleBtn\";\nimport SignUpForm from \"components/Auth/SignUpForm\";\nimport BackHomeBtn from \"components/Auth/BackHomeBtn\";\nimport { AuthWrap, ScrollContainer } from \"components/Auth/CommonAuth.styled\";\nimport {\n  AuthText,\n  LoginTextBlock,\n  WelcomeText,\n} from \"components/Auth/CommonAuth.styled\";\n\nconst SignUpPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <ScrollContainer>\n      <AuthWrap $variant=\"register\">\n        <BackHomeBtn variant=\"auth\" />\n        <LoginTextBlock>\n          <WelcomeText>{t(\"auth.welcome\")}</WelcomeText>\n          <AuthText>{t(\"auth.fillFields\")}</AuthText>\n        </LoginTextBlock>\n        <AuthNav />\n        <SignUpForm />\n        <GoogleBtn text={t(\"auth.googleSignUp\")} />\n      </AuthWrap>\n    </ScrollContainer>\n  );\n};\n\nexport default SignUpPage;\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport { loginThunk } from \"../../../redux/auth/authOperations\";\nimport { LOGIN_INIT_VALUES } from \"constants/index\";\nimport ShowPasswordBtn from \"../ShowPasswordBtn\";\nimport SmallSpinner from \"components/Loaders/SmallSpinner\";\nimport {\n  AuthForm,\n  AuthLabel,\n  AuthInput,\n  AuthErrorText,\n  AuthSubmitBtn,\n} from \"../CommonAuth.styled\";\n\nconst SignInForm = () => {\n  const [isPwdShown, setIsPwdShown] = useState(false);\n  const [areCredentialsInvalid, setAreCredentialsInvalid] = useState(false);\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onSubmit = async ({ email, password }) => {\n    const formData = {\n      email,\n      password,\n    };\n\n    const res = await dispatch(loginThunk(formData));\n\n    if (res.error && res.error.message === \"Rejected\") {\n      setAreCredentialsInvalid(true);\n    } else {\n      navigate(\"/\");\n    }\n  };\n\n  const { getFieldProps, handleSubmit, isSubmitting } = useFormik({\n    initialValues: LOGIN_INIT_VALUES,\n    onSubmit,\n  });\n\n  return (\n    <AuthForm onSubmit={handleSubmit}>\n      <AuthLabel>\n        {t(\"auth.email\")}\n        <AuthInput\n          type=\"email\"\n          placeholder={t(\"auth.placeholder\")}\n          className={areCredentialsInvalid && \"invalid\"}\n          {...getFieldProps(\"email\")}\n          maxLength={128}\n        />\n      </AuthLabel>\n\n      <AuthLabel className=\"passwordLabel\">\n        {t(\"auth.password\")}\n        <AuthInput\n          type={isPwdShown ? \"text\" : \"password\"}\n          placeholder={t(\"auth.placeholder\")}\n          className={\n            areCredentialsInvalid\n              ? \"sign-in-password invalid\"\n              : \"sign-in-password\"\n          }\n          {...getFieldProps(\"password\")}\n          maxLength={100}\n        />\n        {areCredentialsInvalid && (\n          <AuthErrorText>{t(\"validation.check\")}</AuthErrorText>\n        )}\n        <ShowPasswordBtn isPwdShown={isPwdShown} setPwdShown={setIsPwdShown} />\n      </AuthLabel>\n\n      <AuthSubmitBtn type=\"submit\" className=\"accent-button\">\n        {isSubmitting ? (\n          <SmallSpinner width={20} height={20} />\n        ) : (\n          t(\"auth.signIn\")\n        )}\n      </AuthSubmitBtn>\n    </AuthForm>\n  );\n};\n\nexport default SignInForm;\n","import { useTranslation } from \"react-i18next\";\nimport SignInForm from \"components/Auth/SignInForm\";\nimport GoogleBtn from \"components/Auth/GoogleBtn\";\nimport AuthNav from \"components/Auth/AuthNav\";\nimport BackHomeBtn from \"components/Auth/BackHomeBtn\";\nimport {\n  ResetPwdBlock,\n  ResetPwdLink,\n} from \"components/Auth/SignInForm/SignInForm.styled\";\nimport { AuthWrap, ScrollContainer } from \"components/Auth/CommonAuth.styled\";\nimport {\n  AuthText,\n  LoginTextBlock,\n  WelcomeText,\n} from \"components/Auth/CommonAuth.styled\";\n\nconst SignInPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <ScrollContainer>\n      <AuthWrap>\n        <BackHomeBtn variant='auth' />\n        <LoginTextBlock>\n          <WelcomeText>{t(\"auth.welcome\")}</WelcomeText>\n          <AuthText>{t(\"auth.loginText\")}</AuthText>\n        </LoginTextBlock>\n\n        <AuthNav />\n        <SignInForm />\n        <ResetPwdBlock>\n          <p>{t(\"auth.forgotPassword\")}</p>\n          <ResetPwdLink to=\"/auth/forgotpass\">{t(\"auth.reset\")}</ResetPwdLink>\n        </ResetPwdBlock>\n        <GoogleBtn text={t(\"auth.googleSignIn\")} />\n      </AuthWrap>\n    </ScrollContainer>\n  );\n};\n\nexport default SignInPage;\n","import { useParams } from \"react-router-dom\";\nimport MobPictureContainer from \"components/Auth/MobPictureContainer\";\nimport PictureContainer from \"components/Auth/PictureContainer\";\nimport SignUpPage from \"./SignUpPage\";\nimport SignInPage from \"./SignInPage\";\nimport { PositioningWrap } from \"../components/Auth/PictureContainer/PictureContainer.styled\";\n\nconst AuthPage = () => {\n  const { authId } = useParams();\n\n  return (\n    <>\n      {authId === \"login\" ? (\n        <>\n          <MobPictureContainer>\n            <SignInPage />\n          </MobPictureContainer>\n\n          <PictureContainer>\n            <PositioningWrap>\n              <SignInPage />\n            </PositioningWrap>\n          </PictureContainer>\n        </>\n      ) : (\n        <>\n          <MobPictureContainer>\n            <SignUpPage />\n          </MobPictureContainer>\n\n          <PictureContainer>\n            <PositioningWrap>\n              <SignUpPage />\n            </PositioningWrap>\n          </PictureContainer>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AuthPage;\n","import * as Yup from \"yup\";\n\nconst changeSchema = Yup.object({\n  firstName: Yup.string()\n    .min(2, \"validation.name.min\")\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]+$/,\n      \"validation.name.matches\"\n    )\n    .required(\"validation.required\"),\n  lastName: Yup.string()\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]*$/,\n      \"validation.name.matches\"\n    )\n    .min(2, \"validation.name.min\")\n    .nullable(),\n  phoneNumber: Yup.string()\n    .matches(/^\\+380\\d{9}$/, \"validation.phone.invalid\")\n    .required(\"validation.required\"),\n  region: Yup.string()\n    .max(50, \"validation.reg.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]+$/,\n      \"validation.reg.matches\"\n    )\n    .nullable(),\n  organization: Yup.string().max(200, \"validation.organization.max\").nullable(),\n  comment: Yup.string().max(500, \"validation.about.max\").nullable(),\n});\n\nexport default changeSchema;\n","import * as Yup from \"yup\";\n\nconst registerSchema = Yup.object({\n  firstName: Yup.string()\n    .min(2, \"validation.name.min\")\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]+$/,\n      \"validation.name.matches\"\n    )\n    .required(\"validation.required\"),\n  lastName: Yup.string()\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]*$/,\n      \"validation.name.matches\"\n    )\n    .min(2, \"validation.name.min\")\n    .nullable(),\n  phoneNumber: Yup.string()\n    .matches(/^\\+380\\d{9}$/, \"validation.phone.invalid\")\n    .required(\"validation.required\"),\n  email: Yup.string()\n    .email(\"validation.email.invalid\")\n    .matches(\n      /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n      \"validation.email.invalid\"\n    )\n    .required(\"validation.required\"),\n  password: Yup.string()\n    .min(8, \"validation.password.length\")\n    .max(100, \"validation.password.length\")\n    .matches(/[A-Z]/, \"validation.password.uppercase\")\n    .matches(/[a-z]/, \"validation.password.lowercase\")\n    .matches(/[0-9]/, \"validation.password.digit\")\n    .matches(/^[a-zA-Z0-9]+$/, \"validation.password.specialSym\")\n    .required(\"validation.required\"),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\")], \"validation.password.confirm\")\n    .required(\"validation.required\"),\n  agreement: Yup.boolean().oneOf([true]).required(),\n});\n\nexport default registerSchema;\n","import * as Yup from \"yup\";\n\nconst emailSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"validation.email.invalid\")\n    .matches(\n      /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n      \"validation.email.invalid\"\n    )\n\n    .required(\"validation.required\"),\n});\n\nexport default emailSchema;\n","import * as Yup from \"yup\";\n\nconst passwordSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(8, \"validation.password.length\")\n    .max(100, \"validation.password.length\")\n    .matches(/[A-Z]/, \"validation.password.uppercase\")\n    .matches(/[a-z]/, \"validation.password.lowercase\")\n    .matches(/[0-9]/, \"validation.password.digit\")\n    .matches(/^[a-zA-Z0-9]+$/, \"validation.password.specialSym\")\n    .required(\"validation.required\"),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\")], \"validation.password.confirm\")\n    .required(\"validation.required\"),\n});\n\nexport default passwordSchema;\n","import * as Yup from \"yup\";\n\nconst createTaskSchema = Yup.object({\n  title: Yup.string()\n    .min(5, \"createTask.validation.titleMin\")\n    .max(100, \"createTask.validation.titleMax\")\n    .required(\"createTask.validation.enterData\"),\n  description: Yup.string()\n    .min(40, \"createTask.validation.descrMin\")\n    .max(9000)\n    .required(\"createTask.validation.enterData\"),\n  comment: Yup.string().max(9000),\n});\n\nexport default createTaskSchema;\n","import * as Yup from \"yup\";\n\nconst confirmApplicationSchema = Yup.object({\n  firstName: Yup.string()\n    .min(2, \"validation.name.min\")\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]+$/,\n      \"validation.name.matches\"\n    )\n    .required(\"validation.required\"),\n  lastName: Yup.string()\n    .max(50, \"validation.name.max\")\n    .matches(\n      /^[^\\d!@#$%^&*()_+=\\-[\\]{};:\"\\\\|,.<>/?]*$/,\n      \"validation.name.matches\"\n    )\n    .min(2, \"validation.name.min\")\n    .nullable(),\n  phoneNumber: Yup.string()\n    .matches(/^\\+380\\d{9}$/, \"validation.phone.invalid\")\n    .required(\"validation.required\"),\n  region: Yup.string().required(\"validation.required\"),\n  comment: Yup.string().max(9000),\n  agreement: Yup.boolean().oneOf([true]).required(),\n});\n\nexport default confirmApplicationSchema;\n","import * as Yup from \"yup\";\n\nconst changePasswordSchema = Yup.object().shape({\n  oldPassword: Yup.string().required(\"validation.required\"),\n  newPassword: Yup.string()\n    .min(8, \"validation.password.length\")\n    .max(100, \"validation.password.length\")\n    .matches(/[A-Z]/, \"validation.password.uppercase\")\n    .matches(/[a-z]/, \"validation.password.lowercase\")\n    .matches(/[0-9]/, \"validation.password.digit\")\n    .matches(/^[a-zA-Z0-9]+$/, \"validation.password.specialSym\")\n    .required(\"validation.required\"),\n  repeatNewPassword: Yup.string()\n    .oneOf([Yup.ref(\"newPassword\")], \"validation.password.confirm\")\n    .required(\"validation.required\"),\n});\n\nexport default changePasswordSchema;\n"],"names":["AuthWrap","styled","div","_templateObject","_taggedTemplateLiteral","_ref","$variant","ScrollContainer","_templateObject2","AuthForm","form","_templateObject3","_ref2","AuthLabel","label","_templateObject4","_ref3","AuthInput","input","_templateObject5","AuthErrorText","p","_templateObject6","AuthSubmitBtn","button","_templateObject7","LoginTextBlock","_templateObject8","WelcomeText","_templateObject9","AuthText","_templateObject10","MobPicContainer","children","_jsx","PicContainer","PicBlock","tabPic","deskPic","PositioningWrap","_jsxs","RequirWrap","ShowRequirementsBtn","RequirList","ul","error","touched","value","variant","requirementsMet","setRequirementsMet","useState","length","uppercase","lowercase","digit","specialSym","useEffect","newValue","test","t","useTranslation","type","className","width","height","href","concat","sprite","ShowBtn","isPwdShown","setPwdShown","onClick","prev","ResetPwdBlock","_ref4","ResetPwdLink","Link","gradientTextHover","PrivacyLabel","CheckBox","PrivacyText","color","TailSpin","visible","ariaLabel","radius","NavBlock","nav","AuthNavLink","NavLink","AuthNav","to","commonBeforeAfter","css","DecorOrElement","GoogleLink","text","_Fragment","baseURL","SignUpForm","setIsPwdShown","isConfirmPwdShown","setIsConfirmPwdShown","dispatch","useDispatch","navigate","useNavigate","errors","values","getFieldProps","handleSubmit","isSubmitting","useFormik","initialValues","REGISTER_INIT_VALUES","validationSchema","registerSchema","onSubmit","async","firstName","lastName","email","phoneNumber","password","repeatPassword","agreement","formData","isValid","res","registrationThunk","undefined","authSlice","actions","setUserEmail","setStorageData","placeholder","maxLength","autoComplete","ShowPasswordBtn","PwdRequirements","id","name","target","rel","disabled","Object","keys","SmallSpinner","SignUpPage","BackHomeBtn","GoogleBtn","SignInForm","areCredentialsInvalid","setAreCredentialsInvalid","LOGIN_INIT_VALUES","loginThunk","message","SignInPage","AuthPage","authId","useParams","MobPictureContainer","PictureContainer","Yup","min","max","matches","required","nullable","region","organization","comment","oneOf","shape","title","description","oldPassword","newPassword","repeatNewPassword"],"sourceRoot":""}